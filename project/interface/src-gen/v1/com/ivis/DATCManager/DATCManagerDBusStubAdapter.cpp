/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.v201601121430.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/com/ivis/DATCManager/DATCManager.hpp>
#include <v1/com/ivis/DATCManager/DATCManagerDBusStubAdapter.hpp>

namespace v1 {
namespace com {
namespace ivis {
namespace DATCManager {

std::shared_ptr<CommonAPI::DBus::DBusStubAdapter> createDATCManagerDBusStubAdapter(
                   const CommonAPI::DBus::DBusAddress &_address,
                   const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
                   const std::shared_ptr<CommonAPI::StubBase> &_stub) {
    return std::make_shared<DATCManagerDBusStubAdapter>(_address, _connection, _stub);
}

INITIALIZER(registerDATCManagerDBusStubAdapter) {
    CommonAPI::DBus::Factory::get()->registerStubAdapterCreateMethod(
    	DATCManager::getInterface(), &createDATCManagerDBusStubAdapter);
}

DATCManagerDBusStubAdapterInternal::~DATCManagerDBusStubAdapterInternal() {
    deactivateManagedInstances();
    DATCManagerDBusStubAdapterHelper::deinit();
}

void DATCManagerDBusStubAdapterInternal::deactivateManagedInstances() {

}

const char* DATCManagerDBusStubAdapterInternal::getMethodsDBusIntrospectionXmlData() const {
    static const std::string introspectionData =
        "<method name=\"getInterfaceVersion\">\n"
            "<arg name=\"value\" type=\"uu\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"getTemperatureModeAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setTemperatureModeAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"i\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onTemperatureModeAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getDualModeAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setDualModeAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onDualModeAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getAutoModeAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setAutoModeAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onAutoModeAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getAirConditionerRunAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setAirConditionerRunAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onAirConditionerRunAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getHeaterRunAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setHeaterRunAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onHeaterRunAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getInteriorTemperautreAttribute\">\n"
            "<arg name=\"value\" type=\"d\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onInteriorTemperautreAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"d\" />\n"
        "</signal>\n"
        "<method name=\"getExteriorTemperatureAttribute\">\n"
            "<arg name=\"value\" type=\"d\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onExteriorTemperatureAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"d\" />\n"
        "</signal>\n"
        "<method name=\"getTargetTemperaturesAttribute\">\n"
            "<arg name=\"value\" type=\"a(id)\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setTargetTemperaturesAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(id)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(id)\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onTargetTemperaturesAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(id)\" />\n"
        "</signal>\n"
        "<method name=\"getFanDirectionsAttribute\">\n"
            "<arg name=\"value\" type=\"a(ii)\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setFanDirectionsAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(ii)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(ii)\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onFanDirectionsAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(ii)\" />\n"
        "</signal>\n"
        "<method name=\"getFanSpeedsAttribute\">\n"
            "<arg name=\"value\" type=\"a(iq)\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setFanSpeedsAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(iq)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(iq)\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onFanSpeedsAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(iq)\" />\n"
        "</signal>\n"
        "<method name=\"getDefrostsAttribute\">\n"
            "<arg name=\"value\" type=\"a(ib)\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setDefrostsAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(ib)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(ib)\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onDefrostsAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(ib)\" />\n"
        "</signal>\n"
        "<method name=\"getAirRecirculationAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setAirRecirculationAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onAirRecirculationAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getSteeringWheelHeaterAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setSteeringWheelHeaterAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onSteeringWheelHeaterAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getSeatHeatersAttribute\">\n"
            "<arg name=\"value\" type=\"a(ib)\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setSeatHeatersAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(ib)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(ib)\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onSeatHeatersAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(ib)\" />\n"
        "</signal>\n"
        "<method name=\"getSeatCoolersAttribute\">\n"
            "<arg name=\"value\" type=\"a(ib)\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"setSeatCoolersAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(ib)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(ib)\" direction=\"out\" />\n"
        "</method>\n"
        "<signal name=\"onSeatCoolersAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(ib)\" />\n"
        "</signal>\n"
        "<signal name=\"responseGetSupportedTemperatureRange\">\n"
            "<arg name=\"temperatureRange\" type=\"(dd)\" />\n"
        "</signal>\n"
        "<signal name=\"responseSetTargetTemperature\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"areaType\" type=\"i\" />\n"
            "<arg name=\"temperature\" type=\"d\" />\n"
        "</signal>\n"
        "<signal name=\"responseGetSupportedFanDirection\">\n"
            "<arg name=\"supportedFanDirectionList\" type=\"ai\" />\n"
        "</signal>\n"
        "<signal name=\"responseSetFanDirection\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"areaType\" type=\"i\" />\n"
            "<arg name=\"fanDirection\" type=\"i\" />\n"
        "</signal>\n"
        "<signal name=\"responseGetSupportedFanSpeedRange\">\n"
            "<arg name=\"fanSpeedRange\" type=\"(qq)\" />\n"
        "</signal>\n"
        "<signal name=\"responseSetFanSpeed\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"areaType\" type=\"i\" />\n"
            "<arg name=\"fanSpeed\" type=\"q\" />\n"
        "</signal>\n"
        "<signal name=\"responseGetSupportedDefrostTarget\">\n"
            "<arg name=\"supportedDefrostTargetList\" type=\"ai\" />\n"
        "</signal>\n"
        "<signal name=\"responseSetAirRecirculation\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"on\" type=\"b\" />\n"
        "</signal>\n"
        "<signal name=\"responseGetSteeringWheelHeaterSupported\">\n"
            "<arg name=\"steeringWheelHeaterSupported\" type=\"b\" />\n"
        "</signal>\n"
        "<signal name=\"responseSetSteeringWheelHeater\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"on\" type=\"b\" />\n"
        "</signal>\n"
        "<signal name=\"responseGetSeatHeaterSupported\">\n"
            "<arg name=\"seatHeaterSupported\" type=\"b\" />\n"
        "</signal>\n"
        "<signal name=\"responseSetSeatHeater\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"areaType\" type=\"i\" />\n"
            "<arg name=\"on\" type=\"b\" />\n"
        "</signal>\n"
        "<signal name=\"responseGetSeatCoolerSupported\">\n"
            "<arg name=\"seatCoolerSupported\" type=\"b\" />\n"
        "</signal>\n"
        "<signal name=\"responseSetSeatCooler\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"areaType\" type=\"i\" />\n"
            "<arg name=\"on\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"requestGetSupportedTemperatureRange\">\n"
        "</method>\n"
        "<method name=\"requestSetTargetTemperature\">\n"
            "<arg name=\"_areaType\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"_temperature\" type=\"d\" direction=\"in\" />\n"
        "</method>\n"
        "<method name=\"requestSetTargetTemperatureByDelta\">\n"
            "<arg name=\"_areaType\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"_temperatureDelta\" type=\"d\" direction=\"in\" />\n"
        "</method>\n"
        "<method name=\"requestGetSupportedFanDirection\">\n"
        "</method>\n"
        "<method name=\"requestGetSupportedFanSpeedRange\">\n"
        "</method>\n"
        "<method name=\"requestSetFanSpeed\">\n"
            "<arg name=\"_areaType\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"_fanSpeed\" type=\"q\" direction=\"in\" />\n"
        "</method>\n"
        "<method name=\"requestSetFanSpeedByDelta\">\n"
            "<arg name=\"_areaType\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"_fanSpeedDelta\" type=\"q\" direction=\"in\" />\n"
        "</method>\n"
        "<method name=\"requestGetSupportedDefrostTarget\">\n"
        "</method>\n"
        "<method name=\"requestGetSteeringWheelHeaterSupported\">\n"
        "</method>\n"
        "<method name=\"requestGetSeatHeaterSupported\">\n"
        "</method>\n"
        "<method name=\"requestGetSeatCoolerSupported\">\n"
        "</method>\n"

    ;
    return introspectionData.c_str();
}

CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        CommonAPI::Version
        > DATCManagerDBusStubAdapterInternal::getDATCManagerInterfaceVersionStubDispatcher(&DATCManagerStub::getInterfaceVersion, "uu");

CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode
        > DATCManagerDBusStubAdapterInternal::getTemperatureModeAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getTemperatureModeAttribute
            , "i"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode
        > DATCManagerDBusStubAdapterInternal::setTemperatureModeAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getTemperatureModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetTemperatureModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteTemperatureModeAttributeChanged
                ,&DATCManagerStubAdapter::fireTemperatureModeAttributeChanged
                ,"i"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::getDualModeAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getDualModeAttribute
            , "b"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::setDualModeAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getDualModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetDualModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteDualModeAttributeChanged
                ,&DATCManagerStubAdapter::fireDualModeAttributeChanged
                ,"b"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::getAutoModeAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getAutoModeAttribute
            , "b"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::setAutoModeAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getAutoModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetAutoModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteAutoModeAttributeChanged
                ,&DATCManagerStubAdapter::fireAutoModeAttributeChanged
                ,"b"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::getAirConditionerRunAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getAirConditionerRunAttribute
            , "b"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::setAirConditionerRunAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getAirConditionerRunAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetAirConditionerRunAttribute,
                &DATCManagerStubRemoteEvent::onRemoteAirConditionerRunAttributeChanged
                ,&DATCManagerStubAdapter::fireAirConditionerRunAttributeChanged
                ,"b"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::getHeaterRunAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getHeaterRunAttribute
            , "b"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::setHeaterRunAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getHeaterRunAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetHeaterRunAttribute,
                &DATCManagerStubRemoteEvent::onRemoteHeaterRunAttributeChanged
                ,&DATCManagerStubAdapter::fireHeaterRunAttributeChanged
                ,"b"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        double
        > DATCManagerDBusStubAdapterInternal::getInteriorTemperautreAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getInteriorTemperautreAttribute
            , "d"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        double
        > DATCManagerDBusStubAdapterInternal::getExteriorTemperatureAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getExteriorTemperatureAttribute
            , "d"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t
        > DATCManagerDBusStubAdapterInternal::getTargetTemperaturesAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getTargetTemperaturesAttribute
            , "a(id)"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t
        > DATCManagerDBusStubAdapterInternal::setTargetTemperaturesAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getTargetTemperaturesAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetTargetTemperaturesAttribute,
                &DATCManagerStubRemoteEvent::onRemoteTargetTemperaturesAttributeChanged
                ,&DATCManagerStubAdapter::fireTargetTemperaturesAttributeChanged
                ,"a(id)"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t
        > DATCManagerDBusStubAdapterInternal::getFanDirectionsAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getFanDirectionsAttribute
            , "a(ii)"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t
        > DATCManagerDBusStubAdapterInternal::setFanDirectionsAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getFanDirectionsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetFanDirectionsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteFanDirectionsAttributeChanged
                ,&DATCManagerStubAdapter::fireFanDirectionsAttributeChanged
                ,"a(ii)"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t
        > DATCManagerDBusStubAdapterInternal::getFanSpeedsAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getFanSpeedsAttribute
            , "a(iq)"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t
        > DATCManagerDBusStubAdapterInternal::setFanSpeedsAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getFanSpeedsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetFanSpeedsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteFanSpeedsAttributeChanged
                ,&DATCManagerStubAdapter::fireFanSpeedsAttributeChanged
                ,"a(iq)"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t
        > DATCManagerDBusStubAdapterInternal::getDefrostsAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getDefrostsAttribute
            , "a(ib)"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t
        > DATCManagerDBusStubAdapterInternal::setDefrostsAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getDefrostsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetDefrostsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteDefrostsAttributeChanged
                ,&DATCManagerStubAdapter::fireDefrostsAttributeChanged
                ,"a(ib)"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::getAirRecirculationAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getAirRecirculationAttribute
            , "b"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::setAirRecirculationAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getAirRecirculationAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetAirRecirculationAttribute,
                &DATCManagerStubRemoteEvent::onRemoteAirRecirculationAttributeChanged
                ,&DATCManagerStubAdapter::fireAirRecirculationAttributeChanged
                ,"b"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::getSteeringWheelHeaterAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getSteeringWheelHeaterAttribute
            , "b"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal::setSteeringWheelHeaterAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getSteeringWheelHeaterAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetSteeringWheelHeaterAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSteeringWheelHeaterAttributeChanged
                ,&DATCManagerStubAdapter::fireSteeringWheelHeaterAttributeChanged
                ,"b"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t
        > DATCManagerDBusStubAdapterInternal::getSeatHeatersAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getSeatHeatersAttribute
            , "a(ib)"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t
        > DATCManagerDBusStubAdapterInternal::setSeatHeatersAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getSeatHeatersAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetSeatHeatersAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSeatHeatersAttributeChanged
                ,&DATCManagerStubAdapter::fireSeatHeatersAttributeChanged
                ,"a(ib)"
                );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t
        > DATCManagerDBusStubAdapterInternal::getSeatCoolersAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getSeatCoolersAttribute
            , "a(ib)"
            );
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t
        > DATCManagerDBusStubAdapterInternal::setSeatCoolersAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getSeatCoolersAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetSeatCoolersAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSeatCoolersAttributeChanged
                ,&DATCManagerStubAdapter::fireSeatCoolersAttributeChanged
                ,"a(ib)"
                );



CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestGetSupportedTemperatureRangeStubDispatcher(
    &DATCManagerStub::requestGetSupportedTemperatureRange, "",
					std::make_tuple(),
                	std::make_tuple());

CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, double>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestSetTargetTemperatureStubDispatcher(
    &DATCManagerStub::requestSetTargetTemperature, "",
					std::make_tuple(static_cast<CommonAPI::EmptyDeployment*>(nullptr), static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
                	std::make_tuple());

CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, double>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestSetTargetTemperatureByDeltaStubDispatcher(
    &DATCManagerStub::requestSetTargetTemperatureByDelta, "",
					std::make_tuple(static_cast<CommonAPI::EmptyDeployment*>(nullptr), static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
                	std::make_tuple());

CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestGetSupportedFanDirectionStubDispatcher(
    &DATCManagerStub::requestGetSupportedFanDirection, "",
					std::make_tuple(),
                	std::make_tuple());

CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestGetSupportedFanSpeedRangeStubDispatcher(
    &DATCManagerStub::requestGetSupportedFanSpeedRange, "",
					std::make_tuple(),
                	std::make_tuple());

CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, uint16_t>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestSetFanSpeedStubDispatcher(
    &DATCManagerStub::requestSetFanSpeed, "",
					std::make_tuple(static_cast<CommonAPI::EmptyDeployment*>(nullptr), static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
                	std::make_tuple());

CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, uint16_t>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestSetFanSpeedByDeltaStubDispatcher(
    &DATCManagerStub::requestSetFanSpeedByDelta, "",
					std::make_tuple(static_cast<CommonAPI::EmptyDeployment*>(nullptr), static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
                	std::make_tuple());

CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestGetSupportedDefrostTargetStubDispatcher(
    &DATCManagerStub::requestGetSupportedDefrostTarget, "",
					std::make_tuple(),
                	std::make_tuple());

CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestGetSteeringWheelHeaterSupportedStubDispatcher(
    &DATCManagerStub::requestGetSteeringWheelHeaterSupported, "",
					std::make_tuple(),
                	std::make_tuple());

CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestGetSeatHeaterSupportedStubDispatcher(
    &DATCManagerStub::requestGetSeatHeaterSupported, "",
					std::make_tuple(),
                	std::make_tuple());

CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > DATCManagerDBusStubAdapterInternal::requestGetSeatCoolerSupportedStubDispatcher(
    &DATCManagerStub::requestGetSeatCoolerSupported, "",
					std::make_tuple(),
                	std::make_tuple());


void DATCManagerDBusStubAdapterInternal::fireTemperatureModeAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode
    >>
        ::sendSignal(
            *this,
            "onTemperatureModeAttributeChanged",
            "i",
            value
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireDualModeAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onDualModeAttributeChanged",
            "b",
            value
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireAutoModeAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onAutoModeAttributeChanged",
            "b",
            value
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireAirConditionerRunAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onAirConditionerRunAttributeChanged",
            "b",
            value
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireHeaterRunAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onHeaterRunAttributeChanged",
            "b",
            value
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireInteriorTemperautreAttributeChanged(const double& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    double
    >>
        ::sendSignal(
            *this,
            "onInteriorTemperautreAttributeChanged",
            "d",
            value
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireExteriorTemperatureAttributeChanged(const double& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    double
    >>
        ::sendSignal(
            *this,
            "onExteriorTemperatureAttributeChanged",
            "d",
            value
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireTargetTemperaturesAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures& value) {
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures, ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t> deployedValue(value, static_cast<::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t*>(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onTargetTemperaturesAttributeChanged",
            "a(id)",
            deployedValue
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireFanDirectionsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections& value) {
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections, ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t> deployedValue(value, static_cast<::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t*>(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onFanDirectionsAttributeChanged",
            "a(ii)",
            deployedValue
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireFanSpeedsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds& value) {
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds, ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t> deployedValue(value, static_cast<::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t*>(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onFanSpeedsAttributeChanged",
            "a(iq)",
            deployedValue
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireDefrostsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts& value) {
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts, ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t> deployedValue(value, static_cast<::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t*>(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onDefrostsAttributeChanged",
            "a(ib)",
            deployedValue
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireAirRecirculationAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onAirRecirculationAttributeChanged",
            "b",
            value
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireSteeringWheelHeaterAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onSteeringWheelHeaterAttributeChanged",
            "b",
            value
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireSeatHeatersAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters& value) {
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t> deployedValue(value, static_cast<::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t*>(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onSeatHeatersAttributeChanged",
            "a(ib)",
            deployedValue
    
    );
}
void DATCManagerDBusStubAdapterInternal::fireSeatCoolersAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers& value) {
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t> deployedValue(value, static_cast<::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t*>(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onSeatCoolersAttributeChanged",
            "a(ib)",
            deployedValue
    
    );
}

void DATCManagerDBusStubAdapterInternal::fireResponseGetSupportedTemperatureRangeEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::TemperatureRange& temperatureRange) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::TemperatureRange, ::v1::com::ivis::DATCManager::DATCManagerTypes_::TemperatureRangeDeployment_t>
    >>::sendSignal(
            *this,
            "responseGetSupportedTemperatureRange",
            "(dd)",
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::TemperatureRange, ::v1::com::ivis::DATCManager::DATCManagerTypes_::TemperatureRangeDeployment_t>(temperatureRange, static_cast<::v1::com::ivis::DATCManager::DATCManagerTypes_::TemperatureRangeDeployment_t*>(nullptr))
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseSetTargetTemperatureEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const double& temperature) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType,
    double
    >>::sendSignal(
            *this,
            "responseSetTargetTemperature",
            "iid",
    result,
    areaType,
    temperature
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseGetSupportedFanDirectionEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedFanDirectionList& supportedFanDirectionList) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedFanDirectionList, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedFanDirectionListDeployment_t>
    >>::sendSignal(
            *this,
            "responseGetSupportedFanDirection",
            "ai",
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedFanDirectionList, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedFanDirectionListDeployment_t>(supportedFanDirectionList, static_cast<::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedFanDirectionListDeployment_t*>(nullptr))
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseSetFanDirectionEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EHvacFanDirection& fanDirection) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EHvacFanDirection
    >>::sendSignal(
            *this,
            "responseSetFanDirection",
            "iii",
    result,
    areaType,
    fanDirection
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseGetSupportedFanSpeedRangeEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeedRange& fanSpeedRange) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeedRange, ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedRangeDeployment_t>
    >>::sendSignal(
            *this,
            "responseGetSupportedFanSpeedRange",
            "(qq)",
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeedRange, ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedRangeDeployment_t>(fanSpeedRange, static_cast<::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedRangeDeployment_t*>(nullptr))
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseSetFanSpeedEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const uint16_t& fanSpeed) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType,
    uint16_t
    >>::sendSignal(
            *this,
            "responseSetFanSpeed",
            "iiq",
    result,
    areaType,
    fanSpeed
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseGetSupportedDefrostTargetEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedDefrostTargetList& supportedDefrostTargetList) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedDefrostTargetList, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedDefrostTargetListDeployment_t>
    >>::sendSignal(
            *this,
            "responseGetSupportedDefrostTarget",
            "ai",
    CommonAPI::Deployable<::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedDefrostTargetList, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedDefrostTargetListDeployment_t>(supportedDefrostTargetList, static_cast<::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedDefrostTargetListDeployment_t*>(nullptr))
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseSetAirRecirculationEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const bool& on) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    bool
    >>::sendSignal(
            *this,
            "responseSetAirRecirculation",
            "ib",
    result,
    on
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseGetSteeringWheelHeaterSupportedEvent(const bool& steeringWheelHeaterSupported) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>::sendSignal(
            *this,
            "responseGetSteeringWheelHeaterSupported",
            "b",
    steeringWheelHeaterSupported
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseSetSteeringWheelHeaterEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const bool& on) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    bool
    >>::sendSignal(
            *this,
            "responseSetSteeringWheelHeater",
            "ib",
    result,
    on
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseGetSeatHeaterSupportedEvent(const bool& seatHeaterSupported) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>::sendSignal(
            *this,
            "responseGetSeatHeaterSupported",
            "b",
    seatHeaterSupported
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseSetSeatHeaterEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const bool& on) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType,
    bool
    >>::sendSignal(
            *this,
            "responseSetSeatHeater",
            "iib",
    result,
    areaType,
    on
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseGetSeatCoolerSupportedEvent(const bool& seatCoolerSupported) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>::sendSignal(
            *this,
            "responseGetSeatCoolerSupported",
            "b",
    seatCoolerSupported
    );
}
void DATCManagerDBusStubAdapterInternal::fireResponseSetSeatCoolerEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const bool& on) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType,
    bool
    >>::sendSignal(
            *this,
            "responseSetSeatCooler",
            "iib",
    result,
    areaType,
    on
    );
}


const DATCManagerDBusStubAdapterHelper::StubDispatcherTable& DATCManagerDBusStubAdapterInternal::getStubDispatcherTable() {
    return stubDispatcherTable_;
}

const CommonAPI::DBus::StubAttributeTable& DATCManagerDBusStubAdapterInternal::getStubAttributeTable() {
    return stubAttributeTable_;
}

DATCManagerDBusStubAdapterInternal::DATCManagerDBusStubAdapterInternal(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
        const std::shared_ptr<CommonAPI::StubBase> &_stub)
	: CommonAPI::DBus::DBusStubAdapter(_address, _connection,false),
      DATCManagerDBusStubAdapterHelper(_address, _connection, std::dynamic_pointer_cast<DATCManagerStub>(_stub), false),
      stubDispatcherTable_({
            { { "getTemperatureModeAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getTemperatureModeAttributeStubDispatcher }
            , { { "setTemperatureModeAttribute", "i" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setTemperatureModeAttributeStubDispatcher },
            { { "getDualModeAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getDualModeAttributeStubDispatcher }
            , { { "setDualModeAttribute", "b" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setDualModeAttributeStubDispatcher },
            { { "getAutoModeAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getAutoModeAttributeStubDispatcher }
            , { { "setAutoModeAttribute", "b" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setAutoModeAttributeStubDispatcher },
            { { "getAirConditionerRunAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getAirConditionerRunAttributeStubDispatcher }
            , { { "setAirConditionerRunAttribute", "b" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setAirConditionerRunAttributeStubDispatcher },
            { { "getHeaterRunAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getHeaterRunAttributeStubDispatcher }
            , { { "setHeaterRunAttribute", "b" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setHeaterRunAttributeStubDispatcher },
            { { "getInteriorTemperautreAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getInteriorTemperautreAttributeStubDispatcher },
            { { "getExteriorTemperatureAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getExteriorTemperatureAttributeStubDispatcher },
            { { "getTargetTemperaturesAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getTargetTemperaturesAttributeStubDispatcher }
            , { { "setTargetTemperaturesAttribute", "a(id)" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setTargetTemperaturesAttributeStubDispatcher },
            { { "getFanDirectionsAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getFanDirectionsAttributeStubDispatcher }
            , { { "setFanDirectionsAttribute", "a(ii)" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setFanDirectionsAttributeStubDispatcher },
            { { "getFanSpeedsAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getFanSpeedsAttributeStubDispatcher }
            , { { "setFanSpeedsAttribute", "a(iq)" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setFanSpeedsAttributeStubDispatcher },
            { { "getDefrostsAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getDefrostsAttributeStubDispatcher }
            , { { "setDefrostsAttribute", "a(ib)" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setDefrostsAttributeStubDispatcher },
            { { "getAirRecirculationAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getAirRecirculationAttributeStubDispatcher }
            , { { "setAirRecirculationAttribute", "b" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setAirRecirculationAttributeStubDispatcher },
            { { "getSteeringWheelHeaterAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getSteeringWheelHeaterAttributeStubDispatcher }
            , { { "setSteeringWheelHeaterAttribute", "b" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setSteeringWheelHeaterAttributeStubDispatcher },
            { { "getSeatHeatersAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getSeatHeatersAttributeStubDispatcher }
            , { { "setSeatHeatersAttribute", "a(ib)" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setSeatHeatersAttributeStubDispatcher },
            { { "getSeatCoolersAttribute", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getSeatCoolersAttributeStubDispatcher }
            , { { "setSeatCoolersAttribute", "a(ib)" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::setSeatCoolersAttributeStubDispatcher }
            ,
            { { "requestGetSupportedTemperatureRange", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestGetSupportedTemperatureRangeStubDispatcher },
            { { "requestSetTargetTemperature", "id" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestSetTargetTemperatureStubDispatcher },
            { { "requestSetTargetTemperatureByDelta", "id" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestSetTargetTemperatureByDeltaStubDispatcher },
            { { "requestGetSupportedFanDirection", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestGetSupportedFanDirectionStubDispatcher },
            { { "requestGetSupportedFanSpeedRange", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestGetSupportedFanSpeedRangeStubDispatcher },
            { { "requestSetFanSpeed", "iq" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestSetFanSpeedStubDispatcher },
            { { "requestSetFanSpeedByDelta", "iq" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestSetFanSpeedByDeltaStubDispatcher },
            { { "requestGetSupportedDefrostTarget", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestGetSupportedDefrostTargetStubDispatcher },
            { { "requestGetSteeringWheelHeaterSupported", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestGetSteeringWheelHeaterSupportedStubDispatcher },
            { { "requestGetSeatHeaterSupported", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestGetSeatHeaterSupportedStubDispatcher },
            { { "requestGetSeatCoolerSupported", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::requestGetSeatCoolerSupportedStubDispatcher }
            }),
        stubAttributeTable_() {

    stubDispatcherTable_.insert({ { "getInterfaceVersion", "" }, &com::ivis::DATCManager::DATCManagerDBusStubAdapterInternal::getDATCManagerInterfaceVersionStubDispatcher });
}

bool DATCManagerDBusStubAdapterInternal::hasFreedesktopProperties() {
    return false;
}

} // namespace DATCManager
} // namespace ivis
} // namespace com
} // namespace v1
