/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.v201601121430.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_IVIS_DATCMANAGER_DATC_Manager_DBUS_STUB_ADAPTER_HPP_
#define V1_COM_IVIS_DATCMANAGER_DATC_Manager_DBUS_STUB_ADAPTER_HPP_

#include <v1/com/ivis/DATCManager/DATCManagerStub.hpp>
#include "v1/com/ivis/DATCManager/DATCManagerDBusDeployment.hpp"        
#include <v1/com/ivis/DATCManager/DATCManagerTypesDBusDeployment.hpp>        

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddressTranslator.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusStubAdapterHelper.hpp>
#include <CommonAPI/DBus/DBusStubAdapter.hpp>
#include <CommonAPI/DBus/DBusDeployment.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace ivis {
namespace DATCManager {

typedef CommonAPI::DBus::DBusStubAdapterHelper<DATCManagerStub> DATCManagerDBusStubAdapterHelper;

class DATCManagerDBusStubAdapterInternal
    : public virtual DATCManagerStubAdapter,
      public DATCManagerDBusStubAdapterHelper
{
public:
    DATCManagerDBusStubAdapterInternal(
            const CommonAPI::DBus::DBusAddress &_address,
            const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
            const std::shared_ptr<CommonAPI::StubBase> &_stub);

    ~DATCManagerDBusStubAdapterInternal();

    virtual bool hasFreedesktopProperties();

    inline static const char* getInterface() {
        return DATCManager::getInterface();
    }

    void fireTemperatureModeAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode& value);
    void fireDualModeAttributeChanged(const bool& value);
    void fireAutoModeAttributeChanged(const bool& value);
    void fireAirConditionerRunAttributeChanged(const bool& value);
    void fireHeaterRunAttributeChanged(const bool& value);
    void fireInteriorTemperautreAttributeChanged(const double& value);
    void fireExteriorTemperatureAttributeChanged(const double& value);
    void fireTargetTemperaturesAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures& value);
    void fireFanDirectionsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections& value);
    void fireFanSpeedsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds& value);
    void fireDefrostsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts& value);
    void fireAirRecirculationAttributeChanged(const bool& value);
    void fireSteeringWheelHeaterAttributeChanged(const bool& value);
    void fireSeatHeatersAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters& value);
    void fireSeatCoolersAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers& value);

    void fireResponseGetSupportedTemperatureRangeEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::TemperatureRange& temperatureRange);
    void fireResponseSetTargetTemperatureEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const double& temperature);
    void fireResponseGetSupportedFanDirectionEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedFanDirectionList& supportedFanDirectionList);
    void fireResponseSetFanDirectionEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EHvacFanDirection& fanDirection);
    void fireResponseGetSupportedFanSpeedRangeEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeedRange& fanSpeedRange);
    void fireResponseSetFanSpeedEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const uint16_t& fanSpeed);
    void fireResponseGetSupportedDefrostTargetEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedDefrostTargetList& supportedDefrostTargetList);
    void fireResponseSetAirRecirculationEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const bool& on);
    void fireResponseGetSteeringWheelHeaterSupportedEvent(const bool& steeringWheelHeaterSupported);
    void fireResponseSetSteeringWheelHeaterEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const bool& on);
    void fireResponseGetSeatHeaterSupportedEvent(const bool& seatHeaterSupported);
    void fireResponseSetSeatHeaterEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const bool& on);
    void fireResponseGetSeatCoolerSupportedEvent(const bool& seatCoolerSupported);
    void fireResponseSetSeatCoolerEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const bool& on);


    const DATCManagerDBusStubAdapterHelper::StubDispatcherTable& getStubDispatcherTable();
    const CommonAPI::DBus::StubAttributeTable& getStubAttributeTable();

    void deactivateManagedInstances();
    

static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        CommonAPI::Version
        > getDATCManagerInterfaceVersionStubDispatcher;

static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode                
        > getTemperatureModeAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode                    
        > setTemperatureModeAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                
        > getDualModeAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                    
        > setDualModeAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                
        > getAutoModeAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                    
        > setAutoModeAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                
        > getAirConditionerRunAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                    
        > setAirConditionerRunAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                
        > getHeaterRunAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                    
        > setHeaterRunAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        double                
        > getInteriorTemperautreAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        double                
        > getExteriorTemperatureAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t                
        > getTargetTemperaturesAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t                    
        > setTargetTemperaturesAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t                
        > getFanDirectionsAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t                    
        > setFanDirectionsAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t                
        > getFanSpeedsAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t                    
        > setFanSpeedsAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t                
        > getDefrostsAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t                    
        > setDefrostsAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                
        > getAirRecirculationAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                    
        > setAirRecirculationAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                
        > getSteeringWheelHeaterAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool                    
        > setSteeringWheelHeaterAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t                
        > getSeatHeatersAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t                    
        > setSeatHeatersAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t                
        > getSeatCoolersAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t                    
        > setSeatCoolersAttributeStubDispatcher;



static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > requestGetSupportedTemperatureRangeStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, double>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestSetTargetTemperatureStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, double>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestSetTargetTemperatureByDeltaStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > requestGetSupportedFanDirectionStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > requestGetSupportedFanSpeedRangeStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, uint16_t>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestSetFanSpeedStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, uint16_t>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestSetFanSpeedByDeltaStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > requestGetSupportedDefrostTargetStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > requestGetSteeringWheelHeaterSupportedStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > requestGetSeatHeaterSupportedStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>,
    std::tuple<>
    
    > requestGetSeatCoolerSupportedStubDispatcher;




 protected:
    virtual const char* getMethodsDBusIntrospectionXmlData() const;

 private:
    DATCManagerDBusStubAdapterHelper::StubDispatcherTable stubDispatcherTable_;
    CommonAPI::DBus::StubAttributeTable stubAttributeTable_;
};

class DATCManagerDBusStubAdapter
    : public DATCManagerDBusStubAdapterInternal,
      public std::enable_shared_from_this<DATCManagerDBusStubAdapter> {
public:
    DATCManagerDBusStubAdapter(
    	const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
        const std::shared_ptr<CommonAPI::StubBase> &_stub)
    	: CommonAPI::DBus::DBusStubAdapter(
    		_address, 
    		_connection,
            false),
          DATCManagerDBusStubAdapterInternal(
          	_address, 
          	_connection, 
          	_stub) { 
    }
};

} // namespace DATCManager
} // namespace ivis
} // namespace com
} // namespace v1

#endif // V1_COM_IVIS_DATCMANAGER_DATC_Manager_DBUS_STUB_ADAPTER_HPP_
