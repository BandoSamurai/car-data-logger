/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.10.v201611111523.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_IVIS_DATCMANAGER_DATC_Manager_DBUS_STUB_ADAPTER_HPP_
#define V1_COM_IVIS_DATCMANAGER_DATC_Manager_DBUS_STUB_ADAPTER_HPP_

#include <v1/com/ivis/DATCManager/DATCManagerStub.hpp>
#include "v1/com/ivis/DATCManager/DATCManagerDBusDeployment.hpp"
#include <v1/com/ivis/DATCManager/DATCManagerTypesDBusDeployment.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddressTranslator.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusStubAdapterHelper.hpp>
#include <CommonAPI/DBus/DBusStubAdapter.hpp>
#include <CommonAPI/DBus/DBusDeployment.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace ivis {
namespace DATCManager {

template <typename _Stub = ::v1::com::ivis::DATCManager::DATCManagerStub, typename... _Stubs>
class DATCManagerDBusStubAdapterInternal
    : public virtual DATCManagerStubAdapter,
      public CommonAPI::DBus::DBusStubAdapterHelper< _Stub, _Stubs...>
     {
public:
    typedef CommonAPI::DBus::DBusStubAdapterHelper< _Stub, _Stubs...> DATCManagerDBusStubAdapterHelper;

    ~DATCManagerDBusStubAdapterInternal() {
        deactivateManagedInstances();
        DATCManagerDBusStubAdapterHelper::deinit();
    }

    virtual bool hasFreedesktopProperties() {
        return false;
    }

    inline static const char* getInterface() {
        return DATCManager::getInterface();
    }

    void fireTemperatureModeAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode& value);

    void fireDualModeAttributeChanged(const bool& value);

    void fireAutoModeAttributeChanged(const bool& value);

    void fireAirConditionerRunAttributeChanged(const bool& value);

    void fireHeaterRunAttributeChanged(const bool& value);

    void fireInteriorTemperautreAttributeChanged(const double& value);

    void fireExteriorTemperatureAttributeChanged(const double& value);

    void fireTargetTemperaturesAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures& value);

    void fireFanDirectionsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections& value);

    void fireFanSpeedsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds& value);

    void fireDefrostsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts& value);

    void fireAirRecirculationAttributeChanged(const bool& value);

    void fireSteeringWheelHeaterAttributeChanged(const bool& value);

    void fireSeatHeatersAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters& value);

    void fireSeatCoolersAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers& value);

    void fireResponseGetSupportedTemperatureRangeEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::TemperatureRange& temperatureRange);

    void fireResponseSetTargetTemperatureEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const double& temperature);

    void fireResponseGetSupportedFanDirectionEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedFanDirectionList& supportedFanDirectionList);

    void fireResponseSetFanDirectionEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EHvacFanDirection& fanDirection);

    void fireResponseGetSupportedFanSpeedRangeEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeedRange& fanSpeedRange);

    void fireResponseSetFanSpeedEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const uint16_t& fanSpeed);

    void fireResponseGetSupportedDefrostTargetEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedDefrostTargetList& supportedDefrostTargetList);

    void fireResponseSetAirRecirculationEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const bool& on);

    void fireResponseGetSteeringWheelHeaterSupportedEvent(const bool& steeringWheelHeaterSupported);

    void fireResponseSetSteeringWheelHeaterEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const bool& on);

    void fireResponseGetSeatHeaterSupportedEvent(const bool& seatHeaterSupported);

    void fireResponseSetSeatHeaterEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const bool& on);

    void fireResponseGetSeatCoolerSupportedEvent(const bool& seatCoolerSupported);

    void fireResponseSetSeatCoolerEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const bool& on);

    void deactivateManagedInstances() {
    }

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        CommonAPI::Version
        > getDATCManagerInterfaceVersionStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode
            > getTemperatureModeAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode
            > setTemperatureModeAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > getDualModeAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > setDualModeAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > getAutoModeAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > setAutoModeAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > getAirConditionerRunAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > setAirConditionerRunAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > getHeaterRunAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > setHeaterRunAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            double
            > getInteriorTemperautreAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            double
            > getExteriorTemperatureAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t
            > getTargetTemperaturesAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t
            > setTargetTemperaturesAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t
            > getFanDirectionsAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t
            > setFanDirectionsAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t
            > getFanSpeedsAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t
            > setFanSpeedsAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t
            > getDefrostsAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t
            > setDefrostsAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > getAirRecirculationAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > setAirRecirculationAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > getSteeringWheelHeaterAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            bool
            > setSteeringWheelHeaterAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t
            > getSeatHeatersAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t
            > setSeatHeatersAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t
            > getSeatCoolersAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::DATCManager::DATCManagerStub,
            ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers,
            ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t
            > setSeatCoolersAttributeStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >
    
        > requestGetSupportedTemperatureRangeStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, double>,
        std::tuple< >,
        std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestSetTargetTemperatureStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, double>,
        std::tuple< >,
        std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestSetTargetTemperatureByDeltaStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >
    
        > requestGetSupportedFanDirectionStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >
    
        > requestGetSupportedFanSpeedRangeStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, uint16_t>,
        std::tuple< >,
        std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestSetFanSpeedStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, uint16_t>,
        std::tuple< >,
        std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestSetFanSpeedByDeltaStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >
    
        > requestGetSupportedDefrostTargetStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >
    
        > requestGetSteeringWheelHeaterSupportedStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >
    
        > requestGetSeatHeaterSupportedStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >,
        std::tuple< >
    
        > requestGetSeatCoolerSupportedStubDispatcher;















    DATCManagerDBusStubAdapterInternal(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
        const std::shared_ptr<_Stub> &_stub)
    : CommonAPI::DBus::DBusStubAdapter(_address, _connection,false),
      DATCManagerDBusStubAdapterHelper(_address, _connection, false, _stub) {
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getTemperatureModeAttribute", "" }, &getTemperatureModeAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setTemperatureModeAttribute", "i" }, &setTemperatureModeAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getDualModeAttribute", "" }, &getDualModeAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setDualModeAttribute", "b" }, &setDualModeAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getAutoModeAttribute", "" }, &getAutoModeAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setAutoModeAttribute", "b" }, &setAutoModeAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getAirConditionerRunAttribute", "" }, &getAirConditionerRunAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setAirConditionerRunAttribute", "b" }, &setAirConditionerRunAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getHeaterRunAttribute", "" }, &getHeaterRunAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setHeaterRunAttribute", "b" }, &setHeaterRunAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getInteriorTemperautreAttribute", "" }, &getInteriorTemperautreAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getExteriorTemperatureAttribute", "" }, &getExteriorTemperatureAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getTargetTemperaturesAttribute", "" }, &getTargetTemperaturesAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setTargetTemperaturesAttribute", "a(id)" }, &setTargetTemperaturesAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getFanDirectionsAttribute", "" }, &getFanDirectionsAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setFanDirectionsAttribute", "a(ii)" }, &setFanDirectionsAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getFanSpeedsAttribute", "" }, &getFanSpeedsAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setFanSpeedsAttribute", "a(iq)" }, &setFanSpeedsAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getDefrostsAttribute", "" }, &getDefrostsAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setDefrostsAttribute", "a(ib)" }, &setDefrostsAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getAirRecirculationAttribute", "" }, &getAirRecirculationAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setAirRecirculationAttribute", "b" }, &setAirRecirculationAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getSteeringWheelHeaterAttribute", "" }, &getSteeringWheelHeaterAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setSteeringWheelHeaterAttribute", "b" }, &setSteeringWheelHeaterAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getSeatHeatersAttribute", "" }, &getSeatHeatersAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setSeatHeatersAttribute", "a(ib)" }, &setSeatHeatersAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getSeatCoolersAttribute", "" }, &getSeatCoolersAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "setSeatCoolersAttribute", "a(ib)" }, &setSeatCoolersAttributeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestGetSupportedTemperatureRange", "" }, &requestGetSupportedTemperatureRangeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestSetTargetTemperature", "id" }, &requestSetTargetTemperatureStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestSetTargetTemperatureByDelta", "id" }, &requestSetTargetTemperatureByDeltaStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestGetSupportedFanDirection", "" }, &requestGetSupportedFanDirectionStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestGetSupportedFanSpeedRange", "" }, &requestGetSupportedFanSpeedRangeStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestSetFanSpeed", "iq" }, &requestSetFanSpeedStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestSetFanSpeedByDelta", "iq" }, &requestSetFanSpeedByDeltaStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestGetSupportedDefrostTarget", "" }, &requestGetSupportedDefrostTargetStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestGetSteeringWheelHeaterSupported", "" }, &requestGetSteeringWheelHeaterSupportedStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestGetSeatHeaterSupported", "" }, &requestGetSeatHeaterSupportedStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "requestGetSeatCoolerSupported", "" }, &requestGetSeatCoolerSupportedStubDispatcher);
        DATCManagerDBusStubAdapterHelper::addStubDispatcher({ "getInterfaceVersion", "" }, &getDATCManagerInterfaceVersionStubDispatcher);
    }

protected:
    virtual const char* getMethodsDBusIntrospectionXmlData() const {
        static const std::string introspectionData =
            "<method name=\"getInterfaceVersion\">\n"
                "<arg name=\"value\" type=\"uu\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"getTemperatureModeAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setTemperatureModeAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"i\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onTemperatureModeAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
            "</signal>\n"
            "<method name=\"getDualModeAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setDualModeAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onDualModeAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
            "</signal>\n"
            "<method name=\"getAutoModeAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setAutoModeAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onAutoModeAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
            "</signal>\n"
            "<method name=\"getAirConditionerRunAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setAirConditionerRunAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onAirConditionerRunAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
            "</signal>\n"
            "<method name=\"getHeaterRunAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setHeaterRunAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onHeaterRunAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
            "</signal>\n"
            "<method name=\"getInteriorTemperautreAttribute\">\n"
            "<arg name=\"value\" type=\"d\" direction=\"out\" />"
            "</method>\n"
            "<signal name=\"onInteriorTemperautreAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"d\" />\n"
            "</signal>\n"
            "<method name=\"getExteriorTemperatureAttribute\">\n"
            "<arg name=\"value\" type=\"d\" direction=\"out\" />"
            "</method>\n"
            "<signal name=\"onExteriorTemperatureAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"d\" />\n"
            "</signal>\n"
            "<method name=\"getTargetTemperaturesAttribute\">\n"
            "<arg name=\"value\" type=\"a(id)\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setTargetTemperaturesAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(id)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(id)\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onTargetTemperaturesAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(id)\" />\n"
            "</signal>\n"
            "<method name=\"getFanDirectionsAttribute\">\n"
            "<arg name=\"value\" type=\"a(ii)\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setFanDirectionsAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(ii)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(ii)\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onFanDirectionsAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(ii)\" />\n"
            "</signal>\n"
            "<method name=\"getFanSpeedsAttribute\">\n"
            "<arg name=\"value\" type=\"a(iq)\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setFanSpeedsAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(iq)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(iq)\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onFanSpeedsAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(iq)\" />\n"
            "</signal>\n"
            "<method name=\"getDefrostsAttribute\">\n"
            "<arg name=\"value\" type=\"a(ib)\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setDefrostsAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(ib)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(ib)\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onDefrostsAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(ib)\" />\n"
            "</signal>\n"
            "<method name=\"getAirRecirculationAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setAirRecirculationAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onAirRecirculationAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
            "</signal>\n"
            "<method name=\"getSteeringWheelHeaterAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setSteeringWheelHeaterAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onSteeringWheelHeaterAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
            "</signal>\n"
            "<method name=\"getSeatHeatersAttribute\">\n"
            "<arg name=\"value\" type=\"a(ib)\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setSeatHeatersAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(ib)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(ib)\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onSeatHeatersAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(ib)\" />\n"
            "</signal>\n"
            "<method name=\"getSeatCoolersAttribute\">\n"
            "<arg name=\"value\" type=\"a(ib)\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setSeatCoolersAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"a(ib)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"a(ib)\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onSeatCoolersAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(ib)\" />\n"
            "</signal>\n"
            "<signal name=\"responseGetSupportedTemperatureRange\">\n"
            "<arg name=\"temperatureRange\" type=\"(dd)\" />\n"
            "</signal>\n"
            "<signal name=\"responseSetTargetTemperature\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"areaType\" type=\"i\" />\n"
            "<arg name=\"temperature\" type=\"d\" />\n"
            "</signal>\n"
            "<signal name=\"responseGetSupportedFanDirection\">\n"
            "<arg name=\"supportedFanDirectionList\" type=\"ai\" />\n"
            "</signal>\n"
            "<signal name=\"responseSetFanDirection\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"areaType\" type=\"i\" />\n"
            "<arg name=\"fanDirection\" type=\"i\" />\n"
            "</signal>\n"
            "<signal name=\"responseGetSupportedFanSpeedRange\">\n"
            "<arg name=\"fanSpeedRange\" type=\"(qq)\" />\n"
            "</signal>\n"
            "<signal name=\"responseSetFanSpeed\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"areaType\" type=\"i\" />\n"
            "<arg name=\"fanSpeed\" type=\"q\" />\n"
            "</signal>\n"
            "<signal name=\"responseGetSupportedDefrostTarget\">\n"
            "<arg name=\"supportedDefrostTargetList\" type=\"ai\" />\n"
            "</signal>\n"
            "<signal name=\"responseSetAirRecirculation\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"on\" type=\"b\" />\n"
            "</signal>\n"
            "<signal name=\"responseGetSteeringWheelHeaterSupported\">\n"
            "<arg name=\"steeringWheelHeaterSupported\" type=\"b\" />\n"
            "</signal>\n"
            "<signal name=\"responseSetSteeringWheelHeater\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"on\" type=\"b\" />\n"
            "</signal>\n"
            "<signal name=\"responseGetSeatHeaterSupported\">\n"
            "<arg name=\"seatHeaterSupported\" type=\"b\" />\n"
            "</signal>\n"
            "<signal name=\"responseSetSeatHeater\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"areaType\" type=\"i\" />\n"
            "<arg name=\"on\" type=\"b\" />\n"
            "</signal>\n"
            "<signal name=\"responseGetSeatCoolerSupported\">\n"
            "<arg name=\"seatCoolerSupported\" type=\"b\" />\n"
            "</signal>\n"
            "<signal name=\"responseSetSeatCooler\">\n"
            "<arg name=\"result\" type=\"i\" />\n"
            "<arg name=\"areaType\" type=\"i\" />\n"
            "<arg name=\"on\" type=\"b\" />\n"
            "</signal>\n"
            "<method name=\"requestGetSupportedTemperatureRange\">\n"
            "</method>\n"
            "<method name=\"requestSetTargetTemperature\">\n"
            "<arg name=\"_areaType\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"_temperature\" type=\"d\" direction=\"in\" />\n"
            "</method>\n"
            "<method name=\"requestSetTargetTemperatureByDelta\">\n"
            "<arg name=\"_areaType\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"_temperatureDelta\" type=\"d\" direction=\"in\" />\n"
            "</method>\n"
            "<method name=\"requestGetSupportedFanDirection\">\n"
            "</method>\n"
            "<method name=\"requestGetSupportedFanSpeedRange\">\n"
            "</method>\n"
            "<method name=\"requestSetFanSpeed\">\n"
            "<arg name=\"_areaType\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"_fanSpeed\" type=\"q\" direction=\"in\" />\n"
            "</method>\n"
            "<method name=\"requestSetFanSpeedByDelta\">\n"
            "<arg name=\"_areaType\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"_fanSpeedDelta\" type=\"q\" direction=\"in\" />\n"
            "</method>\n"
            "<method name=\"requestGetSupportedDefrostTarget\">\n"
            "</method>\n"
            "<method name=\"requestGetSteeringWheelHeaterSupported\">\n"
            "</method>\n"
            "<method name=\"requestGetSeatHeaterSupported\">\n"
            "</method>\n"
            "<method name=\"requestGetSeatCoolerSupported\">\n"
            "</method>\n"
            ;
        return introspectionData.c_str();
    }

private:
};


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    CommonAPI::Version
    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getDATCManagerInterfaceVersionStubDispatcher(&DATCManagerStub::getInterfaceVersion, "uu");

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getTemperatureModeAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getTemperatureModeAttribute
            , "i"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setTemperatureModeAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getTemperatureModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetTemperatureModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteTemperatureModeAttributeChanged
                ,&DATCManagerStubAdapter::fireTemperatureModeAttributeChanged
                ,"i"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getDualModeAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getDualModeAttribute
            , "b"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setDualModeAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getDualModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetDualModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteDualModeAttributeChanged
                ,&DATCManagerStubAdapter::fireDualModeAttributeChanged
                ,"b"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getAutoModeAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getAutoModeAttribute
            , "b"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setAutoModeAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getAutoModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetAutoModeAttribute,
                &DATCManagerStubRemoteEvent::onRemoteAutoModeAttributeChanged
                ,&DATCManagerStubAdapter::fireAutoModeAttributeChanged
                ,"b"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getAirConditionerRunAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getAirConditionerRunAttribute
            , "b"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setAirConditionerRunAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getAirConditionerRunAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetAirConditionerRunAttribute,
                &DATCManagerStubRemoteEvent::onRemoteAirConditionerRunAttributeChanged
                ,&DATCManagerStubAdapter::fireAirConditionerRunAttributeChanged
                ,"b"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getHeaterRunAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getHeaterRunAttribute
            , "b"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setHeaterRunAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getHeaterRunAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetHeaterRunAttribute,
                &DATCManagerStubRemoteEvent::onRemoteHeaterRunAttributeChanged
                ,&DATCManagerStubAdapter::fireHeaterRunAttributeChanged
                ,"b"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        double
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getInteriorTemperautreAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getInteriorTemperautreAttribute
            , "d"
            );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        double
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getExteriorTemperatureAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getExteriorTemperatureAttribute
            , "d"
            );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getTargetTemperaturesAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getTargetTemperaturesAttribute
            , "a(id)"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setTargetTemperaturesAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getTargetTemperaturesAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetTargetTemperaturesAttribute,
                &DATCManagerStubRemoteEvent::onRemoteTargetTemperaturesAttributeChanged
                ,&DATCManagerStubAdapter::fireTargetTemperaturesAttributeChanged
                ,"a(id)"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getFanDirectionsAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getFanDirectionsAttribute
            , "a(ii)"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setFanDirectionsAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getFanDirectionsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetFanDirectionsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteFanDirectionsAttributeChanged
                ,&DATCManagerStubAdapter::fireFanDirectionsAttributeChanged
                ,"a(ii)"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getFanSpeedsAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getFanSpeedsAttribute
            , "a(iq)"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setFanSpeedsAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getFanSpeedsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetFanSpeedsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteFanSpeedsAttributeChanged
                ,&DATCManagerStubAdapter::fireFanSpeedsAttributeChanged
                ,"a(iq)"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getDefrostsAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getDefrostsAttribute
            , "a(ib)"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setDefrostsAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getDefrostsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetDefrostsAttribute,
                &DATCManagerStubRemoteEvent::onRemoteDefrostsAttributeChanged
                ,&DATCManagerStubAdapter::fireDefrostsAttributeChanged
                ,"a(ib)"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getAirRecirculationAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getAirRecirculationAttribute
            , "b"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setAirRecirculationAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getAirRecirculationAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetAirRecirculationAttribute,
                &DATCManagerStubRemoteEvent::onRemoteAirRecirculationAttributeChanged
                ,&DATCManagerStubAdapter::fireAirRecirculationAttributeChanged
                ,"b"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getSteeringWheelHeaterAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getSteeringWheelHeaterAttribute
            , "b"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        bool
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setSteeringWheelHeaterAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getSteeringWheelHeaterAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetSteeringWheelHeaterAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSteeringWheelHeaterAttributeChanged
                ,&DATCManagerStubAdapter::fireSteeringWheelHeaterAttributeChanged
                ,"b"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getSeatHeatersAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getSeatHeatersAttribute
            , "a(ib)"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setSeatHeatersAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getSeatHeatersAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetSeatHeatersAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSeatHeatersAttributeChanged
                ,&DATCManagerStubAdapter::fireSeatHeatersAttributeChanged
                ,"a(ib)"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::getSeatCoolersAttributeStubDispatcher(
            &::v1::com::ivis::DATCManager::DATCManagerStub::getSeatCoolersAttribute
            , "a(ib)"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::DATCManager::DATCManagerStub,
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t
        > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::setSeatCoolersAttributeStubDispatcher(
                &::v1::com::ivis::DATCManager::DATCManagerStub::getSeatCoolersAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSetSeatCoolersAttribute,
                &DATCManagerStubRemoteEvent::onRemoteSeatCoolersAttributeChanged
                ,&DATCManagerStubAdapter::fireSeatCoolersAttributeChanged
                ,"a(ib)"
                );


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestGetSupportedTemperatureRangeStubDispatcher(
    &DATCManagerStub::requestGetSupportedTemperatureRange, "",
    std::make_tuple(),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, double>,
    std::tuple< >,
    std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestSetTargetTemperatureStubDispatcher(
    &DATCManagerStub::requestSetTargetTemperature, "",
    std::make_tuple(static_cast< CommonAPI::EmptyDeployment* >(nullptr), static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, double>,
    std::tuple< >,
    std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestSetTargetTemperatureByDeltaStubDispatcher(
    &DATCManagerStub::requestSetTargetTemperatureByDelta, "",
    std::make_tuple(static_cast< CommonAPI::EmptyDeployment* >(nullptr), static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestGetSupportedFanDirectionStubDispatcher(
    &DATCManagerStub::requestGetSupportedFanDirection, "",
    std::make_tuple(),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestGetSupportedFanSpeedRangeStubDispatcher(
    &DATCManagerStub::requestGetSupportedFanSpeedRange, "",
    std::make_tuple(),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, uint16_t>,
    std::tuple< >,
    std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestSetFanSpeedStubDispatcher(
    &DATCManagerStub::requestSetFanSpeed, "",
    std::make_tuple(static_cast< CommonAPI::EmptyDeployment* >(nullptr), static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType, uint16_t>,
    std::tuple< >,
    std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestSetFanSpeedByDeltaStubDispatcher(
    &DATCManagerStub::requestSetFanSpeedByDelta, "",
    std::make_tuple(static_cast< CommonAPI::EmptyDeployment* >(nullptr), static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestGetSupportedDefrostTargetStubDispatcher(
    &DATCManagerStub::requestGetSupportedDefrostTarget, "",
    std::make_tuple(),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestGetSteeringWheelHeaterSupportedStubDispatcher(
    &DATCManagerStub::requestGetSteeringWheelHeaterSupported, "",
    std::make_tuple(),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestGetSeatHeaterSupportedStubDispatcher(
    &DATCManagerStub::requestGetSeatHeaterSupported, "",
    std::make_tuple(),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::DATCManager::DATCManagerStub,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >,
    std::tuple< >

    > DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::requestGetSeatCoolerSupportedStubDispatcher(
    &DATCManagerStub::requestGetSeatCoolerSupported, "",
    std::make_tuple(),
    std::make_tuple());

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireTemperatureModeAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::ETemperatureMode
    >>
        ::sendSignal(
            *this,
            "onTemperatureModeAttributeChanged",
            "i",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireDualModeAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onDualModeAttributeChanged",
            "b",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireAutoModeAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onAutoModeAttributeChanged",
            "b",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireAirConditionerRunAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onAirConditionerRunAttributeChanged",
            "b",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireHeaterRunAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onHeaterRunAttributeChanged",
            "b",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireInteriorTemperautreAttributeChanged(const double& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    double
    >>
        ::sendSignal(
            *this,
            "onInteriorTemperautreAttributeChanged",
            "d",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireExteriorTemperatureAttributeChanged(const double& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    double
    >>
        ::sendSignal(
            *this,
            "onExteriorTemperatureAttributeChanged",
            "d",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireTargetTemperaturesAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures& value) {
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures, ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t> deployedValue(value, static_cast< ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t* >(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::TargetTemperatures,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::TargetTemperaturesDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onTargetTemperaturesAttributeChanged",
            "a(id)",
            deployedValue
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireFanDirectionsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections& value) {
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections, ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t> deployedValue(value, static_cast< ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t* >(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanDirections,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanDirectionsDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onFanDirectionsAttributeChanged",
            "a(ii)",
            deployedValue
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireFanSpeedsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds& value) {
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds, ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t> deployedValue(value, static_cast< ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t* >(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeeds,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedsDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onFanSpeedsAttributeChanged",
            "a(iq)",
            deployedValue
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireDefrostsAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts& value) {
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts, ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t> deployedValue(value, static_cast< ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t* >(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::Defrosts,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::DefrostsDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onDefrostsAttributeChanged",
            "a(ib)",
            deployedValue
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireAirRecirculationAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onAirRecirculationAttributeChanged",
            "b",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireSteeringWheelHeaterAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onSteeringWheelHeaterAttributeChanged",
            "b",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireSeatHeatersAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters& value) {
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t> deployedValue(value, static_cast< ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t* >(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatHeaters,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatHeatersDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onSeatHeatersAttributeChanged",
            "a(ib)",
            deployedValue
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireSeatCoolersAttributeChanged(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers& value) {
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t> deployedValue(value, static_cast< ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t* >(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::DATCManager::DATCManagerTypes::SeatCoolers,
        ::v1::com::ivis::DATCManager::DATCManagerTypes_::SeatCoolersDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onSeatCoolersAttributeChanged",
            "a(ib)",
            deployedValue
    
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseGetSupportedTemperatureRangeEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::TemperatureRange& temperatureRange) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::TemperatureRange, ::v1::com::ivis::DATCManager::DATCManagerTypes_::TemperatureRangeDeployment_t>
    >>::sendSignal(
            *this,
            "responseGetSupportedTemperatureRange",
            "(dd)",
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::TemperatureRange, ::v1::com::ivis::DATCManager::DATCManagerTypes_::TemperatureRangeDeployment_t>(temperatureRange, static_cast< ::v1::com::ivis::DATCManager::DATCManagerTypes_::TemperatureRangeDeployment_t* >(nullptr))
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseSetTargetTemperatureEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const double& temperature) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType,
    double
    >>::sendSignal(
            *this,
            "responseSetTargetTemperature",
            "iid",
    result,
    areaType,
    temperature
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseGetSupportedFanDirectionEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedFanDirectionList& supportedFanDirectionList) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedFanDirectionList, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedFanDirectionListDeployment_t>
    >>::sendSignal(
            *this,
            "responseGetSupportedFanDirection",
            "ai",
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedFanDirectionList, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedFanDirectionListDeployment_t>(supportedFanDirectionList, static_cast< ::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedFanDirectionListDeployment_t* >(nullptr))
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseSetFanDirectionEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EHvacFanDirection& fanDirection) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EHvacFanDirection
    >>::sendSignal(
            *this,
            "responseSetFanDirection",
            "iii",
    result,
    areaType,
    fanDirection
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseGetSupportedFanSpeedRangeEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeedRange& fanSpeedRange) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeedRange, ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedRangeDeployment_t>
    >>::sendSignal(
            *this,
            "responseGetSupportedFanSpeedRange",
            "(qq)",
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::FanSpeedRange, ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedRangeDeployment_t>(fanSpeedRange, static_cast< ::v1::com::ivis::DATCManager::DATCManagerTypes_::FanSpeedRangeDeployment_t* >(nullptr))
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseSetFanSpeedEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const uint16_t& fanSpeed) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType,
    uint16_t
    >>::sendSignal(
            *this,
            "responseSetFanSpeed",
            "iiq",
    result,
    areaType,
    fanSpeed
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseGetSupportedDefrostTargetEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedDefrostTargetList& supportedDefrostTargetList) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedDefrostTargetList, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedDefrostTargetListDeployment_t>
    >>::sendSignal(
            *this,
            "responseGetSupportedDefrostTarget",
            "ai",
    CommonAPI::Deployable< ::v1::com::ivis::DATCManager::DATCManagerTypes::SupportedDefrostTargetList, ::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedDefrostTargetListDeployment_t>(supportedDefrostTargetList, static_cast< ::v1::com::ivis::DATCManager::DATCManagerTypes_::SupportedDefrostTargetListDeployment_t* >(nullptr))
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseSetAirRecirculationEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const bool& on) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    bool
    >>::sendSignal(
            *this,
            "responseSetAirRecirculation",
            "ib",
    result,
    on
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseGetSteeringWheelHeaterSupportedEvent(const bool& steeringWheelHeaterSupported) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>::sendSignal(
            *this,
            "responseGetSteeringWheelHeaterSupported",
            "b",
    steeringWheelHeaterSupported
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseSetSteeringWheelHeaterEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const bool& on) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    bool
    >>::sendSignal(
            *this,
            "responseSetSteeringWheelHeater",
            "ib",
    result,
    on
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseGetSeatHeaterSupportedEvent(const bool& seatHeaterSupported) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>::sendSignal(
            *this,
            "responseGetSeatHeaterSupported",
            "b",
    seatHeaterSupported
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseSetSeatHeaterEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const bool& on) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType,
    bool
    >>::sendSignal(
            *this,
            "responseSetSeatHeater",
            "iib",
    result,
    areaType,
    on
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseGetSeatCoolerSupportedEvent(const bool& seatCoolerSupported) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>::sendSignal(
            *this,
            "responseGetSeatCoolerSupported",
            "b",
    seatCoolerSupported
    );
}

template <typename _Stub, typename... _Stubs>
void DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseSetSeatCoolerEvent(const ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult& result, const ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType& areaType, const bool& on) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EDatcControlResult,
    ::v1::com::ivis::DATCManager::DATCManagerTypes::EAreaType,
    bool
    >>::sendSignal(
            *this,
            "responseSetSeatCooler",
            "iib",
    result,
    areaType,
    on
    );
}


template <typename _Stub = ::v1::com::ivis::DATCManager::DATCManagerStub, typename... _Stubs>
class DATCManagerDBusStubAdapter
    : public DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>,
      public std::enable_shared_from_this< DATCManagerDBusStubAdapter<_Stub, _Stubs...>> {
public:
    DATCManagerDBusStubAdapter(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
        const std::shared_ptr<_Stub> &_stub)
        : CommonAPI::DBus::DBusStubAdapter(
            _address,
            _connection,
            false),
          DATCManagerDBusStubAdapterInternal<_Stub, _Stubs...>(
            _address,
            _connection,
            _stub) {
    }
};

} // namespace DATCManager
} // namespace ivis
} // namespace com
} // namespace v1

#endif // V1_COM_IVIS_DATCMANAGER_DATC_Manager_DBUS_STUB_ADAPTER_HPP_
