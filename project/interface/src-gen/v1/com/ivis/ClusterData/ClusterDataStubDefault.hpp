/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.v201601121427.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_IVIS_CLUSTERDATA_Cluster_Data_STUB_DEFAULT_HPP_
#define V1_COM_IVIS_CLUSTERDATA_Cluster_Data_STUB_DEFAULT_HPP_


#include <v1/com/ivis/ClusterData/ClusterDataStub.hpp>
#include <sstream>

namespace v1 {
namespace com {
namespace ivis {
namespace ClusterData {

/**
 * Provides a default implementation for ClusterDataStubRemoteEvent and
 * ClusterDataStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class ClusterDataStubDefault
    : public virtual ClusterDataStub {
public:
    ClusterDataStubDefault();

    ClusterDataStubRemoteEvent* initStubAdapter(const std::shared_ptr<ClusterDataStubAdapter> &_adapter);

    const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);

    virtual const uint16_t& getVehicleSpeedAttribute();
    virtual const uint16_t& getVehicleSpeedAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setVehicleSpeedAttribute(uint16_t _value);
    virtual void setVehicleSpeedAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint16_t _value);
    virtual const uint16_t& getEngineSpeedAttribute();
    virtual const uint16_t& getEngineSpeedAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setEngineSpeedAttribute(uint16_t _value);
    virtual void setEngineSpeedAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint16_t _value);
    virtual const uint8_t& getFuelLevelAttribute();
    virtual const uint8_t& getFuelLevelAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setFuelLevelAttribute(uint8_t _value);
    virtual void setFuelLevelAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _value);




protected:
    /**
     * description: current vehicle speed. unit is km/h
     */
    virtual bool trySetVehicleSpeedAttribute(uint16_t _value);
    virtual bool validateVehicleSpeedAttributeRequestedValue(const uint16_t &_value);
    virtual void onRemoteVehicleSpeedAttributeChanged();
    /**
     * description: current engine speed. unit is RPM
     */
    virtual bool trySetEngineSpeedAttribute(uint16_t _value);
    virtual bool validateEngineSpeedAttributeRequestedValue(const uint16_t &_value);
    virtual void onRemoteEngineSpeedAttributeChanged();
    /**
     * description: current fuel level. unit is %
     */
    virtual bool trySetFuelLevelAttribute(uint8_t _value);
    virtual bool validateFuelLevelAttributeRequestedValue(const uint8_t &_value);
    virtual void onRemoteFuelLevelAttributeChanged();
    class RemoteEventHandler: public virtual ClusterDataStubRemoteEvent {
    public:
        RemoteEventHandler(ClusterDataStubDefault *_defaultStub);

        /**
         * description: current vehicle speed. unit is km/h
         */
        virtual bool onRemoteSetVehicleSpeedAttribute(uint16_t _value);
        virtual bool onRemoteSetVehicleSpeedAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint16_t _value);
        virtual void onRemoteVehicleSpeedAttributeChanged();

        /**
         * description: current engine speed. unit is RPM
         */
        virtual bool onRemoteSetEngineSpeedAttribute(uint16_t _value);
        virtual bool onRemoteSetEngineSpeedAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint16_t _value);
        virtual void onRemoteEngineSpeedAttributeChanged();

        /**
         * description: current fuel level. unit is %
         */
        virtual bool onRemoteSetFuelLevelAttribute(uint8_t _value);
        virtual bool onRemoteSetFuelLevelAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _value);
        virtual void onRemoteFuelLevelAttributeChanged();


    private:
        ClusterDataStubDefault *defaultStub_;
    };
private:
    ClusterDataStubDefault::RemoteEventHandler remoteEventHandler_;

    /**
     * description: current vehicle speed. unit is km/h
     */
    uint16_t vehicleSpeedAttributeValue_ {};
    /**
     * description: current engine speed. unit is RPM
     */
    uint16_t engineSpeedAttributeValue_ {};
    /**
     * description: current fuel level. unit is %
     */
    uint8_t fuelLevelAttributeValue_ {};

    CommonAPI::Version interfaceVersion_;
};

} // namespace ClusterData
} // namespace ivis
} // namespace com
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_COM_IVIS_CLUSTERDATA_Cluster_Data_STUB_DEFAULT
