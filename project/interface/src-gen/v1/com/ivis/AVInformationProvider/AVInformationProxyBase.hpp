/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.10.v201611111521.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_IVIS_AVINFORMATIONPROVIDER_AV_Information_PROXY_BASE_HPP_
#define V1_COM_IVIS_AVINFORMATIONPROVIDER_AV_Information_PROXY_BASE_HPP_

#include <v1/com/ivis/AVInformationProvider/AVInformation.hpp>


#include <v1/com/ivis/AVInformationProvider/AVInformationTypes.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Deployment.hpp>
#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <CommonAPI/Struct.hpp>
#include <cstdint>
#include <string>
#include <vector>

#include <CommonAPI/Attribute.hpp>
#include <CommonAPI/Event.hpp>
#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace ivis {
namespace AVInformationProvider {

class AVInformationProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::ObservableAttribute< ::v1::com::ivis::AVInformationProvider::AVInformationTypes::Source> CurrentSourceAttribute;
    typedef CommonAPI::ObservableAttribute< ::v1::com::ivis::AVInformationProvider::AVInformationTypes::MetaData> MetaDataAttribute;
    typedef CommonAPI::ObservableAttribute< ::v1::com::ivis::AVInformationProvider::AVInformationTypes::PlayPosition> PlayPositionAttribute;
    typedef CommonAPI::ObservableAttribute< ::v1::com::ivis::AVInformationProvider::AVInformationTypes::PlayStatus> PlayStatusAttribute;
    typedef CommonAPI::Event<
        uint32_t, uint32_t, std::vector< uint8_t >
    > NotifyAlbumArtEvent;

    typedef std::function<void(const CommonAPI::CallStatus&)> RequestActionAsyncCallback;

    virtual CurrentSourceAttribute& getCurrentSourceAttribute() = 0;
    virtual MetaDataAttribute& getMetaDataAttribute() = 0;
    virtual PlayPositionAttribute& getPlayPositionAttribute() = 0;
    virtual PlayStatusAttribute& getPlayStatusAttribute() = 0;

    virtual NotifyAlbumArtEvent& getNotifyAlbumArtEvent() = 0;

    virtual void requestAction(const AVInformationTypes::Action &_action, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> requestActionAsync(const AVInformationTypes::Action &_action, RequestActionAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
};

} // namespace AVInformationProvider
} // namespace ivis
} // namespace com
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_COM_IVIS_AVINFORMATIONPROVIDER_AV_Information_PROXY_BASE_HPP_
