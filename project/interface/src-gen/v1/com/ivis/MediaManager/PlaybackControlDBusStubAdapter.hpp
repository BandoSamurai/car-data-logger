/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.10.v201611111523.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_IVIS_MEDIAMANAGER_Playback_Control_DBUS_STUB_ADAPTER_HPP_
#define V1_COM_IVIS_MEDIAMANAGER_Playback_Control_DBUS_STUB_ADAPTER_HPP_

#include <v1/com/ivis/MediaManager/PlaybackControlStub.hpp>
#include "v1/com/ivis/MediaManager/PlaybackControlDBusDeployment.hpp"
#include <v1/com/ivis/MediaManager/MediaManagerTypesDBusDeployment.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddressTranslator.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusStubAdapterHelper.hpp>
#include <CommonAPI/DBus/DBusStubAdapter.hpp>
#include <CommonAPI/DBus/DBusDeployment.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace ivis {
namespace MediaManager {

template <typename _Stub = ::v1::com::ivis::MediaManager::PlaybackControlStub, typename... _Stubs>
class PlaybackControlDBusStubAdapterInternal
    : public virtual PlaybackControlStubAdapter,
      public CommonAPI::DBus::DBusStubAdapterHelper< _Stub, _Stubs...>
     {
public:
    typedef CommonAPI::DBus::DBusStubAdapterHelper< _Stub, _Stubs...> PlaybackControlDBusStubAdapterHelper;

    ~PlaybackControlDBusStubAdapterInternal() {
        deactivateManagedInstances();
        PlaybackControlDBusStubAdapterHelper::deinit();
    }

    virtual bool hasFreedesktopProperties() {
        return false;
    }

    inline static const char* getInterface() {
        return PlaybackControl::getInterface();
    }

    void fireRepeatModeAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode& value);

    void firePlayModeAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode& value);

    void fireCurrentTrackInfoAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo& value);

    void fireCurrentTrackNumberAttributeChanged(const uint32_t& value);

    void fireTotalTrackNumberAttributeChanged(const uint32_t& value);

    void fireVideoVisibleAttributeChanged(const bool& value);

    void firePlayStateInfoAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo& value);

    void fireNotifiyTimePositionInfoChangedEvent(const ::v1::com::ivis::MediaManager::MediaManagerTypes::TimePositionInfo& timePositionInfo);

    void fireResponseGetPlaylistEvent(const uint32_t& startIndex, const int32_t& amount, const ::v1::com::ivis::MediaManager::MediaManagerTypes::Playlist& playlist);

    void fireNotifyPlaylistChangedEvent();

    void fireNotifyPlaybackErrorEvent(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlaybackError& errType);

    void deactivateManagedInstances() {
    }

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        CommonAPI::Version
        > getPlaybackControlInterfaceVersionStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode
            > getRepeatModeAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode
            > setRepeatModeAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode
            > getPlayModeAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode
            > setPlayModeAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo,
            ::v1::com::ivis::MediaManager::MediaManagerTypes_::TrackInfoDeployment_t
            > getCurrentTrackInfoAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo,
            ::v1::com::ivis::MediaManager::MediaManagerTypes_::TrackInfoDeployment_t
            > setCurrentTrackInfoAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            uint32_t
            > getCurrentTrackNumberAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            uint32_t
            > setCurrentTrackNumberAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            uint32_t
            > getTotalTrackNumberAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            uint32_t
            > setTotalTrackNumberAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            bool
            > getVideoVisibleAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            bool
            > setVideoVisibleAttributeStubDispatcher;

    static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo,
            ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlayStateInfoDeployment_t
            > getPlayStateInfoAttributeStubDispatcher;
    static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
            ::v1::com::ivis::MediaManager::PlaybackControlStub,
            ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo,
            ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlayStateInfoDeployment_t
            > setPlayStateInfoAttributeStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        std::tuple< ::v1::com::ivis::MediaManager::MediaManagerTypes::Action, uint64_t>,
        std::tuple< >,
        std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestActionStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        std::tuple< uint64_t>,
        std::tuple< >,
        std::tuple< CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestPlayStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        std::tuple< uint64_t, uint64_t>,
        std::tuple< >,
        std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestPlayBrowsingSessionStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        std::tuple< uint32_t>,
        std::tuple< >,
        std::tuple< CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestSetTimePositionStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        std::tuple< ::v1::com::ivis::MediaManager::MediaManagerTypes::ResultTypeList, uint32_t, int32_t>,
        std::tuple< >,
        std::tuple< ::v1::com::ivis::MediaManager::MediaManagerTypes_::ResultTypeListDeployment_t, CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestGetPlaylistStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        std::tuple< ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode>,
        std::tuple< >,
        std::tuple< CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestSetRepeatModeStubDispatcher;

    
    static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        std::tuple< ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode>,
        std::tuple< >,
        std::tuple< CommonAPI::EmptyDeployment>,
        std::tuple< >
    
        > requestSetPlayModeStubDispatcher;





    PlaybackControlDBusStubAdapterInternal(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
        const std::shared_ptr<_Stub> &_stub)
    : CommonAPI::DBus::DBusStubAdapter(_address, _connection,false),
      PlaybackControlDBusStubAdapterHelper(_address, _connection, false, _stub) {
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "getRepeatModeAttribute", "" }, &getRepeatModeAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "setRepeatModeAttribute", "i" }, &setRepeatModeAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "getPlayModeAttribute", "" }, &getPlayModeAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "setPlayModeAttribute", "i" }, &setPlayModeAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "getCurrentTrackInfoAttribute", "" }, &getCurrentTrackInfoAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "setCurrentTrackInfoAttribute", "(ttussssss)" }, &setCurrentTrackInfoAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "getCurrentTrackNumberAttribute", "" }, &getCurrentTrackNumberAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "setCurrentTrackNumberAttribute", "u" }, &setCurrentTrackNumberAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "getTotalTrackNumberAttribute", "" }, &getTotalTrackNumberAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "setTotalTrackNumberAttribute", "u" }, &setTotalTrackNumberAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "getVideoVisibleAttribute", "" }, &getVideoVisibleAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "setVideoVisibleAttribute", "b" }, &setVideoVisibleAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "getPlayStateInfoAttribute", "" }, &getPlayStateInfoAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "setPlayStateInfoAttribute", "(ti)" }, &setPlayStateInfoAttributeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "requestAction", "it" }, &requestActionStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "requestPlay", "t" }, &requestPlayStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "requestPlayBrowsingSession", "tt" }, &requestPlayBrowsingSessionStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "requestSetTimePosition", "u" }, &requestSetTimePositionStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "requestGetPlaylist", "aiui" }, &requestGetPlaylistStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "requestSetRepeatMode", "i" }, &requestSetRepeatModeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "requestSetPlayMode", "i" }, &requestSetPlayModeStubDispatcher);
        PlaybackControlDBusStubAdapterHelper::addStubDispatcher({ "getInterfaceVersion", "" }, &getPlaybackControlInterfaceVersionStubDispatcher);
    }

protected:
    virtual const char* getMethodsDBusIntrospectionXmlData() const {
        static const std::string introspectionData =
            "<method name=\"getInterfaceVersion\">\n"
                "<arg name=\"value\" type=\"uu\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"getRepeatModeAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setRepeatModeAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"i\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onRepeatModeAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
            "</signal>\n"
            "<method name=\"getPlayModeAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setPlayModeAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"i\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onPlayModeAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
            "</signal>\n"
            "<method name=\"getCurrentTrackInfoAttribute\">\n"
            "<arg name=\"value\" type=\"(ttussssss)\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setCurrentTrackInfoAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"(ttussssss)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"(ttussssss)\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onCurrentTrackInfoAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"(ttussssss)\" />\n"
            "</signal>\n"
            "<method name=\"getCurrentTrackNumberAttribute\">\n"
            "<arg name=\"value\" type=\"u\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setCurrentTrackNumberAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"u\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"u\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onCurrentTrackNumberAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"u\" />\n"
            "</signal>\n"
            "<method name=\"getTotalTrackNumberAttribute\">\n"
            "<arg name=\"value\" type=\"u\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setTotalTrackNumberAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"u\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"u\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onTotalTrackNumberAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"u\" />\n"
            "</signal>\n"
            "<method name=\"getVideoVisibleAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setVideoVisibleAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"b\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"b\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onVideoVisibleAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
            "</signal>\n"
            "<method name=\"getPlayStateInfoAttribute\">\n"
            "<arg name=\"value\" type=\"(ti)\" direction=\"out\" />"
            "</method>\n"
            "<method name=\"setPlayStateInfoAttribute\">\n"
            "<arg name=\"requestedValue\" type=\"(ti)\" direction=\"in\" />\n"
            "<arg name=\"setValue\" type=\"(ti)\" direction=\"out\" />\n"
            "</method>\n"
            "<signal name=\"onPlayStateInfoAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"(ti)\" />\n"
            "</signal>\n"
            "<signal name=\"notifiyTimePositionInfoChanged\">\n"
            "<arg name=\"timePositionInfo\" type=\"(tuuu)\" />\n"
            "</signal>\n"
            "<signal name=\"responseGetPlaylist\">\n"
            "<arg name=\"startIndex\" type=\"u\" />\n"
            "<arg name=\"amount\" type=\"i\" />\n"
            "<arg name=\"playlist\" type=\"a(ttussssss)\" />\n"
            "</signal>\n"
            "<signal name=\"notifyPlaylistChanged\">\n"
            "</signal>\n"
            "<signal name=\"notifyPlaybackError\">\n"
            "<arg name=\"errType\" type=\"i\" />\n"
            "</signal>\n"
            "<method name=\"requestAction\">\n"
            "<arg name=\"_action\" type=\"i\" direction=\"in\" />\n"
            "<arg name=\"_value\" type=\"t\" direction=\"in\" />\n"
            "</method>\n"
            "<method name=\"requestPlay\">\n"
            "<arg name=\"_indexOfplaylist\" type=\"t\" direction=\"in\" />\n"
            "</method>\n"
            "<method name=\"requestPlayBrowsingSession\">\n"
            "<arg name=\"_browsingSessionId\" type=\"t\" direction=\"in\" />\n"
            "<arg name=\"_uniqueId\" type=\"t\" direction=\"in\" />\n"
            "</method>\n"
            "<method name=\"requestSetTimePosition\">\n"
            "<arg name=\"_time\" type=\"u\" direction=\"in\" />\n"
            "</method>\n"
            "<method name=\"requestGetPlaylist\">\n"
            "<arg name=\"_resultTypes\" type=\"ai\" direction=\"in\" />\n"
            "<arg name=\"_startIndex\" type=\"u\" direction=\"in\" />\n"
            "<arg name=\"_amount\" type=\"i\" direction=\"in\" />\n"
            "</method>\n"
            "<method name=\"requestSetRepeatMode\">\n"
            "<arg name=\"_mode\" type=\"i\" direction=\"in\" />\n"
            "</method>\n"
            "<method name=\"requestSetPlayMode\">\n"
            "<arg name=\"_mode\" type=\"i\" direction=\"in\" />\n"
            "</method>\n"
            ;
        return introspectionData.c_str();
    }

private:
};


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    CommonAPI::Version
    > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::getPlaybackControlInterfaceVersionStubDispatcher(&PlaybackControlStub::getInterfaceVersion, "uu");

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::getRepeatModeAttributeStubDispatcher(
            &::v1::com::ivis::MediaManager::PlaybackControlStub::getRepeatModeAttribute
            , "i"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::setRepeatModeAttributeStubDispatcher(
                &::v1::com::ivis::MediaManager::PlaybackControlStub::getRepeatModeAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteSetRepeatModeAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteRepeatModeAttributeChanged
                ,&PlaybackControlStubAdapter::fireRepeatModeAttributeChanged
                ,"i"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::getPlayModeAttributeStubDispatcher(
            &::v1::com::ivis::MediaManager::PlaybackControlStub::getPlayModeAttribute
            , "i"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::setPlayModeAttributeStubDispatcher(
                &::v1::com::ivis::MediaManager::PlaybackControlStub::getPlayModeAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteSetPlayModeAttribute,
                &PlaybackControlStubRemoteEvent::onRemotePlayModeAttributeChanged
                ,&PlaybackControlStubAdapter::firePlayModeAttributeChanged
                ,"i"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo,
        ::v1::com::ivis::MediaManager::MediaManagerTypes_::TrackInfoDeployment_t
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::getCurrentTrackInfoAttributeStubDispatcher(
            &::v1::com::ivis::MediaManager::PlaybackControlStub::getCurrentTrackInfoAttribute
            , "(ttussssss)"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo,
        ::v1::com::ivis::MediaManager::MediaManagerTypes_::TrackInfoDeployment_t
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::setCurrentTrackInfoAttributeStubDispatcher(
                &::v1::com::ivis::MediaManager::PlaybackControlStub::getCurrentTrackInfoAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteSetCurrentTrackInfoAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteCurrentTrackInfoAttributeChanged
                ,&PlaybackControlStubAdapter::fireCurrentTrackInfoAttributeChanged
                ,"(ttussssss)"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        uint32_t
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::getCurrentTrackNumberAttributeStubDispatcher(
            &::v1::com::ivis::MediaManager::PlaybackControlStub::getCurrentTrackNumberAttribute
            , "u"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        uint32_t
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::setCurrentTrackNumberAttributeStubDispatcher(
                &::v1::com::ivis::MediaManager::PlaybackControlStub::getCurrentTrackNumberAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteSetCurrentTrackNumberAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteCurrentTrackNumberAttributeChanged
                ,&PlaybackControlStubAdapter::fireCurrentTrackNumberAttributeChanged
                ,"u"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        uint32_t
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::getTotalTrackNumberAttributeStubDispatcher(
            &::v1::com::ivis::MediaManager::PlaybackControlStub::getTotalTrackNumberAttribute
            , "u"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        uint32_t
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::setTotalTrackNumberAttributeStubDispatcher(
                &::v1::com::ivis::MediaManager::PlaybackControlStub::getTotalTrackNumberAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteSetTotalTrackNumberAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteTotalTrackNumberAttributeChanged
                ,&PlaybackControlStubAdapter::fireTotalTrackNumberAttributeChanged
                ,"u"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        bool
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::getVideoVisibleAttributeStubDispatcher(
            &::v1::com::ivis::MediaManager::PlaybackControlStub::getVideoVisibleAttribute
            , "b"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        bool
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::setVideoVisibleAttributeStubDispatcher(
                &::v1::com::ivis::MediaManager::PlaybackControlStub::getVideoVisibleAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteSetVideoVisibleAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteVideoVisibleAttributeChanged
                ,&PlaybackControlStubAdapter::fireVideoVisibleAttributeChanged
                ,"b"
                );

template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo,
        ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlayStateInfoDeployment_t
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::getPlayStateInfoAttributeStubDispatcher(
            &::v1::com::ivis::MediaManager::PlaybackControlStub::getPlayStateInfoAttribute
            , "(ti)"
            );
template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo,
        ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlayStateInfoDeployment_t
        > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::setPlayStateInfoAttributeStubDispatcher(
                &::v1::com::ivis::MediaManager::PlaybackControlStub::getPlayStateInfoAttribute,
                &PlaybackControlStubRemoteEvent::onRemoteSetPlayStateInfoAttribute,
                &PlaybackControlStubRemoteEvent::onRemotePlayStateInfoAttributeChanged
                ,&PlaybackControlStubAdapter::firePlayStateInfoAttributeChanged
                ,"(ti)"
                );


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple< ::v1::com::ivis::MediaManager::MediaManagerTypes::Action, uint64_t>,
    std::tuple< >,
    std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple< >

    > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::requestActionStubDispatcher(
    &PlaybackControlStub::requestAction, "",
    std::make_tuple(static_cast< CommonAPI::EmptyDeployment* >(nullptr), static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple< uint64_t>,
    std::tuple< >,
    std::tuple< CommonAPI::EmptyDeployment>,
    std::tuple< >

    > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::requestPlayStubDispatcher(
    &PlaybackControlStub::requestPlay, "",
    std::make_tuple(static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple< uint64_t, uint64_t>,
    std::tuple< >,
    std::tuple< CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple< >

    > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::requestPlayBrowsingSessionStubDispatcher(
    &PlaybackControlStub::requestPlayBrowsingSession, "",
    std::make_tuple(static_cast< CommonAPI::EmptyDeployment* >(nullptr), static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple< uint32_t>,
    std::tuple< >,
    std::tuple< CommonAPI::EmptyDeployment>,
    std::tuple< >

    > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::requestSetTimePositionStubDispatcher(
    &PlaybackControlStub::requestSetTimePosition, "",
    std::make_tuple(static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple< ::v1::com::ivis::MediaManager::MediaManagerTypes::ResultTypeList, uint32_t, int32_t>,
    std::tuple< >,
    std::tuple< ::v1::com::ivis::MediaManager::MediaManagerTypes_::ResultTypeListDeployment_t, CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple< >

    > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::requestGetPlaylistStubDispatcher(
    &PlaybackControlStub::requestGetPlaylist, "",
    std::make_tuple(static_cast< ::v1::com::ivis::MediaManager::MediaManagerTypes_::ResultTypeListDeployment_t* >(nullptr), static_cast< CommonAPI::EmptyDeployment* >(nullptr), static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple< ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode>,
    std::tuple< >,
    std::tuple< CommonAPI::EmptyDeployment>,
    std::tuple< >

    > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::requestSetRepeatModeStubDispatcher(
    &PlaybackControlStub::requestSetRepeatMode, "",
    std::make_tuple(static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());


template <typename _Stub, typename... _Stubs>
CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple< ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode>,
    std::tuple< >,
    std::tuple< CommonAPI::EmptyDeployment>,
    std::tuple< >

    > PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::requestSetPlayModeStubDispatcher(
    &PlaybackControlStub::requestSetPlayMode, "",
    std::make_tuple(static_cast< CommonAPI::EmptyDeployment* >(nullptr)),
    std::make_tuple());

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::fireRepeatModeAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode
    >>
        ::sendSignal(
            *this,
            "onRepeatModeAttributeChanged",
            "i",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::firePlayModeAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode
    >>
        ::sendSignal(
            *this,
            "onPlayModeAttributeChanged",
            "i",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::fireCurrentTrackInfoAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo& value) {
    CommonAPI::Deployable< ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo, ::v1::com::ivis::MediaManager::MediaManagerTypes_::TrackInfoDeployment_t> deployedValue(value, static_cast< ::v1::com::ivis::MediaManager::MediaManagerTypes_::TrackInfoDeployment_t* >(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo,
        ::v1::com::ivis::MediaManager::MediaManagerTypes_::TrackInfoDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onCurrentTrackInfoAttributeChanged",
            "(ttussssss)",
            deployedValue
    
    );
}

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::fireCurrentTrackNumberAttributeChanged(const uint32_t& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    uint32_t
    >>
        ::sendSignal(
            *this,
            "onCurrentTrackNumberAttributeChanged",
            "u",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::fireTotalTrackNumberAttributeChanged(const uint32_t& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    uint32_t
    >>
        ::sendSignal(
            *this,
            "onTotalTrackNumberAttributeChanged",
            "u",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::fireVideoVisibleAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onVideoVisibleAttributeChanged",
            "b",
            value
    
    );
}

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::firePlayStateInfoAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo& value) {
    CommonAPI::Deployable< ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo, ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlayStateInfoDeployment_t> deployedValue(value, static_cast< ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlayStateInfoDeployment_t* >(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo,
        ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlayStateInfoDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onPlayStateInfoAttributeChanged",
            "(ti)",
            deployedValue
    
    );
}

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::fireNotifiyTimePositionInfoChangedEvent(const ::v1::com::ivis::MediaManager::MediaManagerTypes::TimePositionInfo& timePositionInfo) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable< ::v1::com::ivis::MediaManager::MediaManagerTypes::TimePositionInfo, ::v1::com::ivis::MediaManager::MediaManagerTypes_::TimePositionInfoDeployment_t>
    >>::sendSignal(
            *this,
            "notifiyTimePositionInfoChanged",
            "(tuuu)",
    CommonAPI::Deployable< ::v1::com::ivis::MediaManager::MediaManagerTypes::TimePositionInfo, ::v1::com::ivis::MediaManager::MediaManagerTypes_::TimePositionInfoDeployment_t>(timePositionInfo, static_cast< ::v1::com::ivis::MediaManager::MediaManagerTypes_::TimePositionInfoDeployment_t* >(nullptr))
    );
}

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::fireResponseGetPlaylistEvent(const uint32_t& startIndex, const int32_t& amount, const ::v1::com::ivis::MediaManager::MediaManagerTypes::Playlist& playlist) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    uint32_t,
    int32_t,
    CommonAPI::Deployable< ::v1::com::ivis::MediaManager::MediaManagerTypes::Playlist, ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlaylistDeployment_t>
    >>::sendSignal(
            *this,
            "responseGetPlaylist",
            "uia(ttussssss)",
    startIndex,
    amount,
    CommonAPI::Deployable< ::v1::com::ivis::MediaManager::MediaManagerTypes::Playlist, ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlaylistDeployment_t>(playlist, static_cast< ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlaylistDeployment_t* >(nullptr))
    );
}

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::fireNotifyPlaylistChangedEvent() {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    >>::sendSignal(
            *this,
            "notifyPlaylistChanged",
            ""
    );
}

template <typename _Stub, typename... _Stubs>
void PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>::fireNotifyPlaybackErrorEvent(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlaybackError& errType) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::ivis::MediaManager::MediaManagerTypes::PlaybackError
    >>::sendSignal(
            *this,
            "notifyPlaybackError",
            "i",
    errType
    );
}


template <typename _Stub = ::v1::com::ivis::MediaManager::PlaybackControlStub, typename... _Stubs>
class PlaybackControlDBusStubAdapter
    : public PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>,
      public std::enable_shared_from_this< PlaybackControlDBusStubAdapter<_Stub, _Stubs...>> {
public:
    PlaybackControlDBusStubAdapter(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
        const std::shared_ptr<_Stub> &_stub)
        : CommonAPI::DBus::DBusStubAdapter(
            _address,
            _connection,
            false),
          PlaybackControlDBusStubAdapterInternal<_Stub, _Stubs...>(
            _address,
            _connection,
            _stub) {
    }
};

} // namespace MediaManager
} // namespace ivis
} // namespace com
} // namespace v1

#endif // V1_COM_IVIS_MEDIAMANAGER_Playback_Control_DBUS_STUB_ADAPTER_HPP_
