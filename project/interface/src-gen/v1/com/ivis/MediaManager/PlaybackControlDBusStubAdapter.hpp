/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.v201601121430.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_IVIS_MEDIAMANAGER_Playback_Control_DBUS_STUB_ADAPTER_HPP_
#define V1_COM_IVIS_MEDIAMANAGER_Playback_Control_DBUS_STUB_ADAPTER_HPP_

#include <v1/com/ivis/MediaManager/PlaybackControlStub.hpp>
#include "v1/com/ivis/MediaManager/PlaybackControlDBusDeployment.hpp"        
#include <v1/com/ivis/MediaManager/MediaManagerTypesDBusDeployment.hpp>        

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddressTranslator.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusStubAdapterHelper.hpp>
#include <CommonAPI/DBus/DBusStubAdapter.hpp>
#include <CommonAPI/DBus/DBusDeployment.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace ivis {
namespace MediaManager {

typedef CommonAPI::DBus::DBusStubAdapterHelper<PlaybackControlStub> PlaybackControlDBusStubAdapterHelper;

class PlaybackControlDBusStubAdapterInternal
    : public virtual PlaybackControlStubAdapter,
      public PlaybackControlDBusStubAdapterHelper
{
public:
    PlaybackControlDBusStubAdapterInternal(
            const CommonAPI::DBus::DBusAddress &_address,
            const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
            const std::shared_ptr<CommonAPI::StubBase> &_stub);

    ~PlaybackControlDBusStubAdapterInternal();

    virtual bool hasFreedesktopProperties();

    inline static const char* getInterface() {
        return PlaybackControl::getInterface();
    }

    void fireRepeatModeAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode& value);
    void firePlayModeAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode& value);
    void fireCurrentTrackInfoAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo& value);
    void fireCurrentTrackNumberAttributeChanged(const uint32_t& value);
    void fireTotalTrackNumberAttributeChanged(const uint32_t& value);
    void fireVideoVisibleAttributeChanged(const bool& value);
    void firePlayStateInfoAttributeChanged(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo& value);

    void fireNotifiyTimePositionInfoChangedEvent(const ::v1::com::ivis::MediaManager::MediaManagerTypes::TimePositionInfo& timePositionInfo);
    void fireResponseGetPlaylistEvent(const uint32_t& startIndex, const int32_t& amount, const ::v1::com::ivis::MediaManager::MediaManagerTypes::Playlist& playlist);
    void fireNotifyPlaylistChangedEvent();
    void fireNotifyPlaybackErrorEvent(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlaybackError& errType);


    const PlaybackControlDBusStubAdapterHelper::StubDispatcherTable& getStubDispatcherTable();
    const CommonAPI::DBus::StubAttributeTable& getStubAttributeTable();

    void deactivateManagedInstances();
    

static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        CommonAPI::Version
        > getPlaybackControlInterfaceVersionStubDispatcher;

static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode                
        > getRepeatModeAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode                    
        > setRepeatModeAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode                
        > getPlayModeAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode                    
        > setPlayModeAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo,
        ::v1::com::ivis::MediaManager::MediaManagerTypes_::TrackInfoDeployment_t                
        > getCurrentTrackInfoAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo,
        ::v1::com::ivis::MediaManager::MediaManagerTypes_::TrackInfoDeployment_t                    
        > setCurrentTrackInfoAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        uint32_t                
        > getCurrentTrackNumberAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        uint32_t                    
        > setCurrentTrackNumberAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        uint32_t                
        > getTotalTrackNumberAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        uint32_t                    
        > setTotalTrackNumberAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        bool                
        > getVideoVisibleAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        bool                    
        > setVideoVisibleAttributeStubDispatcher;
static CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo,
        ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlayStateInfoDeployment_t                
        > getPlayStateInfoAttributeStubDispatcher;
static CommonAPI::DBus::DBusSetObservableAttributeStubDispatcher<
        ::v1::com::ivis::MediaManager::PlaybackControlStub,
        ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo,
        ::v1::com::ivis::MediaManager::MediaManagerTypes_::PlayStateInfoDeployment_t                    
        > setPlayStateInfoAttributeStubDispatcher;



static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple<::v1::com::ivis::MediaManager::MediaManagerTypes::Action, uint64_t>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestActionStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple<uint64_t>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestPlayStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple<uint64_t, uint64_t>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestPlayBrowsingSessionStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple<uint32_t>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestSetTimePositionStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple<::v1::com::ivis::MediaManager::MediaManagerTypes::ResultTypeList, uint32_t, int32_t>,
    std::tuple<>,
    std::tuple<::v1::com::ivis::MediaManager::MediaManagerTypes_::ResultTypeListDeployment_t, CommonAPI::EmptyDeployment, CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestGetPlaylistStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple<::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestSetRepeatModeStubDispatcher;

static CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v1::com::ivis::MediaManager::PlaybackControlStub,
    std::tuple<::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > requestSetPlayModeStubDispatcher;




 protected:
    virtual const char* getMethodsDBusIntrospectionXmlData() const;

 private:
    PlaybackControlDBusStubAdapterHelper::StubDispatcherTable stubDispatcherTable_;
    CommonAPI::DBus::StubAttributeTable stubAttributeTable_;
};

class PlaybackControlDBusStubAdapter
    : public PlaybackControlDBusStubAdapterInternal,
      public std::enable_shared_from_this<PlaybackControlDBusStubAdapter> {
public:
    PlaybackControlDBusStubAdapter(
    	const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
        const std::shared_ptr<CommonAPI::StubBase> &_stub)
    	: CommonAPI::DBus::DBusStubAdapter(
    		_address, 
    		_connection,
            false),
          PlaybackControlDBusStubAdapterInternal(
          	_address, 
          	_connection, 
          	_stub) { 
    }
};

} // namespace MediaManager
} // namespace ivis
} // namespace com
} // namespace v1

#endif // V1_COM_IVIS_MEDIAMANAGER_Playback_Control_DBUS_STUB_ADAPTER_HPP_
