/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.10.v201611111521.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_IVIS_MEDIAMANAGER_Playback_Control_PROXY_BASE_HPP_
#define V1_COM_IVIS_MEDIAMANAGER_Playback_Control_PROXY_BASE_HPP_

#include <v1/com/ivis/MediaManager/PlaybackControl.hpp>


#include <v1/com/ivis/MediaManager/MediaManagerTypes.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Deployment.hpp>
#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <CommonAPI/Struct.hpp>
#include <cstdint>
#include <string>
#include <vector>

#include <CommonAPI/Attribute.hpp>
#include <CommonAPI/Event.hpp>
#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace ivis {
namespace MediaManager {

class PlaybackControlProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::ObservableAttribute< ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode> RepeatModeAttribute;
    typedef CommonAPI::ObservableAttribute< ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode> PlayModeAttribute;
    typedef CommonAPI::ObservableAttribute< ::v1::com::ivis::MediaManager::MediaManagerTypes::TrackInfo> CurrentTrackInfoAttribute;
    typedef CommonAPI::ObservableAttribute< uint32_t> CurrentTrackNumberAttribute;
    typedef CommonAPI::ObservableAttribute< uint32_t> TotalTrackNumberAttribute;
    typedef CommonAPI::ObservableAttribute< bool> VideoVisibleAttribute;
    typedef CommonAPI::ObservableAttribute< ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayStateInfo> PlayStateInfoAttribute;
    typedef CommonAPI::Event<
        ::v1::com::ivis::MediaManager::MediaManagerTypes::TimePositionInfo
    > NotifiyTimePositionInfoChangedEvent;
    typedef CommonAPI::Event<
        uint32_t, int32_t, ::v1::com::ivis::MediaManager::MediaManagerTypes::Playlist
    > ResponseGetPlaylistEvent;
    typedef CommonAPI::Event<
    > NotifyPlaylistChangedEvent;
    typedef CommonAPI::Event<
        ::v1::com::ivis::MediaManager::MediaManagerTypes::PlaybackError
    > NotifyPlaybackErrorEvent;

    typedef std::function<void(const CommonAPI::CallStatus&)> RequestActionAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&)> RequestPlayAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&)> RequestPlayBrowsingSessionAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&)> RequestSetTimePositionAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&)> RequestGetPlaylistAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&)> RequestSetRepeatModeAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&)> RequestSetPlayModeAsyncCallback;

    virtual RepeatModeAttribute& getRepeatModeAttribute() = 0;
    virtual PlayModeAttribute& getPlayModeAttribute() = 0;
    virtual CurrentTrackInfoAttribute& getCurrentTrackInfoAttribute() = 0;
    virtual CurrentTrackNumberAttribute& getCurrentTrackNumberAttribute() = 0;
    virtual TotalTrackNumberAttribute& getTotalTrackNumberAttribute() = 0;
    virtual VideoVisibleAttribute& getVideoVisibleAttribute() = 0;
    virtual PlayStateInfoAttribute& getPlayStateInfoAttribute() = 0;

    virtual NotifiyTimePositionInfoChangedEvent& getNotifiyTimePositionInfoChangedEvent() = 0;
    virtual ResponseGetPlaylistEvent& getResponseGetPlaylistEvent() = 0;
    virtual NotifyPlaylistChangedEvent& getNotifyPlaylistChangedEvent() = 0;
    virtual NotifyPlaybackErrorEvent& getNotifyPlaybackErrorEvent() = 0;

    virtual void requestAction(const ::v1::com::ivis::MediaManager::MediaManagerTypes::Action &_action, const uint64_t &_value, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> requestActionAsync(const ::v1::com::ivis::MediaManager::MediaManagerTypes::Action &_action, const uint64_t &_value, RequestActionAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void requestPlay(const uint64_t &_indexOfplaylist, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> requestPlayAsync(const uint64_t &_indexOfplaylist, RequestPlayAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void requestPlayBrowsingSession(const uint64_t &_browsingSessionId, const uint64_t &_uniqueId, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> requestPlayBrowsingSessionAsync(const uint64_t &_browsingSessionId, const uint64_t &_uniqueId, RequestPlayBrowsingSessionAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void requestSetTimePosition(const uint32_t &_time, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> requestSetTimePositionAsync(const uint32_t &_time, RequestSetTimePositionAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void requestGetPlaylist(const ::v1::com::ivis::MediaManager::MediaManagerTypes::ResultTypeList &_resultTypes, const uint32_t &_startIndex, const int32_t &_amount, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> requestGetPlaylistAsync(const ::v1::com::ivis::MediaManager::MediaManagerTypes::ResultTypeList &_resultTypes, const uint32_t &_startIndex, const int32_t &_amount, RequestGetPlaylistAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void requestSetRepeatMode(const ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode &_mode, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> requestSetRepeatModeAsync(const ::v1::com::ivis::MediaManager::MediaManagerTypes::RepeatMode &_mode, RequestSetRepeatModeAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void requestSetPlayMode(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode &_mode, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> requestSetPlayModeAsync(const ::v1::com::ivis::MediaManager::MediaManagerTypes::PlayMode &_mode, RequestSetPlayModeAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
};

} // namespace MediaManager
} // namespace ivis
} // namespace com
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_COM_IVIS_MEDIAMANAGER_Playback_Control_PROXY_BASE_HPP_
