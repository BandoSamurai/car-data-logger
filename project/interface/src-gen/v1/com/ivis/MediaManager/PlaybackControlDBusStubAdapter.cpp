/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.10.v201611111523.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/com/ivis/MediaManager/PlaybackControl.hpp>
#include <v1/com/ivis/MediaManager/PlaybackControlDBusStubAdapter.hpp>

namespace v1 {
namespace com {
namespace ivis {
namespace MediaManager {

std::shared_ptr<CommonAPI::DBus::DBusStubAdapter> createPlaybackControlDBusStubAdapter(
                   const CommonAPI::DBus::DBusAddress &_address,
                   const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
                   const std::shared_ptr<CommonAPI::StubBase> &_stub) {
    return std::make_shared< PlaybackControlDBusStubAdapter<::v1::com::ivis::MediaManager::PlaybackControlStub>>(_address, _connection, std::dynamic_pointer_cast<::v1::com::ivis::MediaManager::PlaybackControlStub>(_stub));
}

void initializePlaybackControlDBusStubAdapter() {
    CommonAPI::DBus::Factory::get()->registerStubAdapterCreateMethod(
        PlaybackControl::getInterface(), &createPlaybackControlDBusStubAdapter);
}

INITIALIZER(registerPlaybackControlDBusStubAdapter) {
    CommonAPI::DBus::Factory::get()->registerInterface(initializePlaybackControlDBusStubAdapter);
}

} // namespace MediaManager
} // namespace ivis
} // namespace com
} // namespace v1
