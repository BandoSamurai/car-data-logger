/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.v201601121430.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/com/ivis/ClusterData/ClusterDataDBusProxy.hpp>

namespace v1 {
namespace com {
namespace ivis {
namespace ClusterData {

std::shared_ptr<CommonAPI::DBus::DBusProxy> createClusterDataDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection) {
	return std::make_shared<ClusterDataDBusProxy>(_address, _connection);
}

INITIALIZER(registerClusterDataDBusProxy) {
     CommonAPI::DBus::Factory::get()->registerProxyCreateMethod(
		ClusterData::getInterface(),
		&createClusterDataDBusProxy);
}

ClusterDataDBusProxy::ClusterDataDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection)
	:	CommonAPI::DBus::DBusProxy(_address, _connection)
,		vehicleSpeed_(*this, "onVehicleSpeedAttributeChanged", "setVehicleSpeedAttribute", "q", "getVehicleSpeedAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		engineSpeed_(*this, "onEngineSpeedAttributeChanged", "setEngineSpeedAttribute", "q", "getEngineSpeedAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		fuelLevel_(*this, "onFuelLevelAttributeChanged", "setFuelLevelAttribute", "y", "getFuelLevelAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		airBagDeployed_(*this, "onAirBagDeployedAttributeChanged", "setAirBagDeployedAttribute", "b", "getAirBagDeployedAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		lowWasherFluid_(*this, "onLowWasherFluidAttributeChanged", "setLowWasherFluidAttribute", "b", "getLowWasherFluidAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		parkingBrake_(*this, "onParkingBrakeAttributeChanged", "setParkingBrakeAttribute", "b", "getParkingBrakeAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		seatBeltActive_(*this, "onSeatBeltActiveAttributeChanged", "setSeatBeltActiveAttribute", "b", "getSeatBeltActiveAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		fogLight_(*this, "onFogLightAttributeChanged", "setFogLightAttribute", "b", "getFogLightAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		headLight_(*this, "onHeadLightAttributeChanged", "setHeadLightAttribute", "b", "getHeadLightAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		highBeam_(*this, "onHighBeamAttributeChanged", "setHighBeamAttribute", "b", "getHighBeamAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		leftIndicator_(*this, "onLeftIndicatorAttributeChanged", "setLeftIndicatorAttribute", "b", "getLeftIndicatorAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		rightIndicator_(*this, "onRightIndicatorAttributeChanged", "setRightIndicatorAttribute", "b", "getRightIndicatorAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		gearState_(*this, "onGearStateAttributeChanged", "setGearStateAttribute", "y", "getGearStateAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		engineCoolantTemperature_(*this, "onEngineCoolantTemperatureAttributeChanged", "setEngineCoolantTemperatureAttribute", "n", "getEngineCoolantTemperatureAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr))
{
}

      ClusterDataDBusProxy::VehicleSpeedAttribute& ClusterDataDBusProxy::getVehicleSpeedAttribute() {
          return vehicleSpeed_;
      }
      ClusterDataDBusProxy::EngineSpeedAttribute& ClusterDataDBusProxy::getEngineSpeedAttribute() {
          return engineSpeed_;
      }
      ClusterDataDBusProxy::FuelLevelAttribute& ClusterDataDBusProxy::getFuelLevelAttribute() {
          return fuelLevel_;
      }
      ClusterDataDBusProxy::AirBagDeployedAttribute& ClusterDataDBusProxy::getAirBagDeployedAttribute() {
          return airBagDeployed_;
      }
      ClusterDataDBusProxy::LowWasherFluidAttribute& ClusterDataDBusProxy::getLowWasherFluidAttribute() {
          return lowWasherFluid_;
      }
      ClusterDataDBusProxy::ParkingBrakeAttribute& ClusterDataDBusProxy::getParkingBrakeAttribute() {
          return parkingBrake_;
      }
      ClusterDataDBusProxy::SeatBeltActiveAttribute& ClusterDataDBusProxy::getSeatBeltActiveAttribute() {
          return seatBeltActive_;
      }
      ClusterDataDBusProxy::FogLightAttribute& ClusterDataDBusProxy::getFogLightAttribute() {
          return fogLight_;
      }
      ClusterDataDBusProxy::HeadLightAttribute& ClusterDataDBusProxy::getHeadLightAttribute() {
          return headLight_;
      }
      ClusterDataDBusProxy::HighBeamAttribute& ClusterDataDBusProxy::getHighBeamAttribute() {
          return highBeam_;
      }
      ClusterDataDBusProxy::LeftIndicatorAttribute& ClusterDataDBusProxy::getLeftIndicatorAttribute() {
          return leftIndicator_;
      }
      ClusterDataDBusProxy::RightIndicatorAttribute& ClusterDataDBusProxy::getRightIndicatorAttribute() {
          return rightIndicator_;
      }
      ClusterDataDBusProxy::GearStateAttribute& ClusterDataDBusProxy::getGearStateAttribute() {
          return gearState_;
      }
      ClusterDataDBusProxy::EngineCoolantTemperatureAttribute& ClusterDataDBusProxy::getEngineCoolantTemperatureAttribute() {
          return engineCoolantTemperature_;
      }

    


void ClusterDataDBusProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
          ownVersionMajor = 1;
          ownVersionMinor = 0;
      }

      } // namespace ClusterData
      } // namespace ivis
      } // namespace com
      } // namespace v1
